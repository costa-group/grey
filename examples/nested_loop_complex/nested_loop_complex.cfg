
======= prueba/nested_loop_complex/nested_loop_complex.yul (EVM) =======
Yul Control Flow Graph:

{
  "object": {
    "blocks": [
      {
        "exit": {
          "targets": [
            "Block1"
          ],
          "type": "Jump"
        },
        "id": "Block0",
        "instructions": []
      },
      {
        "entries": [
          "Block0",
          "Block24"
        ],
        "exit": {
          "cond": "v3",
          "targets": [
            "Block4",
            "Block2"
          ],
          "type": "ConditionalJump"
        },
        "id": "Block1",
        "instructions": [
          {
            "in": [
              "0x00",
              "v51"
            ],
            "op": "PhiFunction",
            "out": [
              "v2"
            ]
          },
          {
            "in": [
              "0x0101",
              "v2"
            ],
            "op": "lt",
            "out": [
              "v3"
            ]
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "exit": {
          "type": "MainExit"
        },
        "id": "Block4",
        "instructions": []
      },
      {
        "exit": {
          "cond": "v6",
          "targets": [
            "Block6",
            "Block5"
          ],
          "type": "ConditionalJump"
        },
        "id": "Block2",
        "instructions": [
          {
            "in": [
              "0x0606",
              "0x0606"
            ],
            "op": "sstore",
            "out": []
          },
          {
            "in": [
              "0x0707"
            ],
            "op": "sload",
            "out": [
              "v6"
            ]
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "exit": {
          "cond": "v9",
          "targets": [
            "Block9",
            "Block8"
          ],
          "type": "ConditionalJump"
        },
        "id": "Block6",
        "instructions": [
          {
            "in": [
              "0x0808",
              "0x0808"
            ],
            "op": "sstore",
            "out": []
          },
          {
            "in": [
              "0x0909"
            ],
            "op": "sload",
            "out": [
              "v9"
            ]
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "exit": {
          "targets": [
            "Block3"
          ],
          "type": "Jump"
        },
        "id": "Block5",
        "instructions": []
      },
      {
        "exit": {
          "targets": [
            "Block11"
          ],
          "type": "Jump"
        },
        "id": "Block9",
        "instructions": [
          {
            "in": [
              "0x0b0b",
              "0x0a0a"
            ],
            "op": "sstore",
            "out": []
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "exit": {
          "targets": [
            "Block4"
          ],
          "type": "Jump"
        },
        "id": "Block8",
        "instructions": []
      },
      {
        "exit": {
          "targets": [
            "Block21"
          ],
          "type": "Jump"
        },
        "id": "Block3",
        "instructions": [
          {
            "in": [
              "0x0202",
              "v2"
            ],
            "op": "sstore",
            "out": []
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "entries": [
          "Block9",
          "Block13"
        ],
        "exit": {
          "cond": "v14",
          "targets": [
            "Block14",
            "Block12"
          ],
          "type": "ConditionalJump"
        },
        "id": "Block11",
        "instructions": [
          {
            "in": [
              "0x00",
              "v29"
            ],
            "op": "PhiFunction",
            "out": [
              "v13"
            ]
          },
          {
            "in": [
              "0x0c0c",
              "v13"
            ],
            "op": "lt",
            "out": [
              "v14"
            ]
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "entries": [
          "Block3",
          "Block23"
        ],
        "exit": {
          "cond": "v46",
          "targets": [
            "Block24",
            "Block22"
          ],
          "type": "ConditionalJump"
        },
        "id": "Block21",
        "instructions": [
          {
            "in": [
              "0x00",
              "v49"
            ],
            "op": "PhiFunction",
            "out": [
              "v45"
            ]
          },
          {
            "in": [
              "0x0303",
              "v45"
            ],
            "op": "lt",
            "out": [
              "v46"
            ]
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "exit": {
          "targets": [
            "Block3"
          ],
          "type": "Jump"
        },
        "id": "Block14",
        "instructions": [
          {
            "in": [
              "0x1212",
              "0x1212"
            ],
            "op": "sstore",
            "out": []
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "exit": {
          "cond": "v17",
          "targets": [
            "Block16",
            "Block15"
          ],
          "type": "ConditionalJump"
        },
        "id": "Block12",
        "instructions": [
          {
            "in": [
              "0x0d0d",
              "0x0d0d"
            ],
            "op": "sstore",
            "out": []
          },
          {
            "in": [
              "0x0e0e"
            ],
            "op": "sload",
            "out": [
              "v17"
            ]
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "exit": {
          "targets": [
            "Block1"
          ],
          "type": "Jump"
        },
        "id": "Block24",
        "instructions": [
          {
            "in": [
              "0x0202",
              "v2"
            ],
            "op": "add",
            "out": [
              "v51"
            ]
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "exit": {
          "targets": [
            "Block23"
          ],
          "type": "Jump"
        },
        "id": "Block22",
        "instructions": [
          {
            "in": [
              "0x0505",
              "v45"
            ],
            "op": "sstore",
            "out": []
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "exit": {
          "cond": "v20",
          "targets": [
            "Block19",
            "Block18"
          ],
          "type": "ConditionalJump"
        },
        "id": "Block16",
        "instructions": [
          {
            "in": [
              "0x0f0f",
              "0x0f0f"
            ],
            "op": "sstore",
            "out": []
          },
          {
            "in": [
              "0x1010"
            ],
            "op": "sload",
            "out": [
              "v20"
            ]
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "exit": {
          "targets": [
            "Block13"
          ],
          "type": "Jump"
        },
        "id": "Block15",
        "instructions": []
      },
      {
        "exit": {
          "targets": [
            "Block21"
          ],
          "type": "Jump"
        },
        "id": "Block23",
        "instructions": [
          {
            "in": [
              "0x0404",
              "v45"
            ],
            "op": "add",
            "out": [
              "v49"
            ]
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "exit": {
          "targets": [
            "Block13"
          ],
          "type": "Jump"
        },
        "id": "Block19",
        "instructions": [
          {
            "in": [
              "0x1111",
              "0x1111"
            ],
            "op": "sstore",
            "out": []
          }
        ],
        "type": "BuiltinCall"
      },
      {
        "exit": {
          "targets": [
            "Block14"
          ],
          "type": "Jump"
        },
        "id": "Block18",
        "instructions": []
      },
      {
        "exit": {
          "targets": [
            "Block11"
          ],
          "type": "Jump"
        },
        "id": "Block13",
        "instructions": [
          {
            "in": [
              "0x01",
              "v13"
            ],
            "op": "add",
            "out": [
              "v29"
            ]
          }
        ],
        "type": "BuiltinCall"
      }
    ],
    "functions": {}
  },
  "subObjects": {},
  "type": "Object"
}
