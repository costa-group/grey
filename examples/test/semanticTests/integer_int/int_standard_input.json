{
    "language": "Solidity",
    "sources": {
        "int.sol": {
            "content": "contract test {\n\n\tfunction intMinA() public pure returns (bool) {\n\n\t\tint8 int8_min = type(int8).min;\n\t\trequire(int8_min == -2**7);\n\n\t\tint16 int16_min = type(int16).min;\n\t\trequire(int16_min == -2**15);\n\n\t\tint24 int24_min = type(int24).min;\n\t\trequire(int24_min == -2**23);\n\n\t\tint32 int32_min = type(int32).min;\n\t\trequire(int32_min == -2**31);\n\n\t\tint40 int40_min = type(int40).min;\n\t\trequire(int40_min == -2**39);\n\n\t\tint48 int48_min = type(int48).min;\n\t\trequire(int48_min == -2**47);\n\n\t\tint56 int56_min = type(int56).min;\n\t\trequire(int56_min == -2**55);\n\n\t\tint64 int64_min = type(int64).min;\n\t\trequire(int64_min == -2**63);\n\n\t\treturn true;\n\t}\n\n\tfunction intMinB() public pure returns(bool) {\n\n\t\tint72 int72_min = type(int72).min;\n\t\trequire(int72_min == -2**71);\n\n\t\tint80 int80_min = type(int80).min;\n\t\trequire(int80_min == -2**79);\n\n\t\tint88 int88_min = type(int88).min;\n\t\trequire(int88_min == -2**87);\n\n\t\tint96 int96_min = type(int96).min;\n\t\trequire(int96_min == -2**95);\n\n\t\tint104 int104_min = type(int104).min;\n\t\trequire(int104_min == -2**103);\n\n\t\tint112 int112_min = type(int112).min;\n\t\trequire(int112_min == -2**111);\n\n\t\tint120 int120_min = type(int120).min;\n\t\trequire(int120_min == -2**119);\n\n\t\tint128 int128_min = type(int128).min;\n\t\trequire(int128_min == -2**127);\n\n\t\treturn true;\n\t}\n\n\tfunction intMinC() public pure returns (bool) {\n\n\t\tint136 int136_min = type(int136).min;\n\t\trequire(int136_min == -2**135);\n\n\t\tint144 int144_min = type(int144).min;\n\t\trequire(int144_min == -2**143);\n\n\t\tint152 int152_min = type(int152).min;\n\t\trequire(int152_min == -2**151);\n\n\t\tint160 int160_min = type(int160).min;\n\t\trequire(int160_min == -2**159);\n\n\t\tint168 int168_min = type(int168).min;\n\t\trequire(int168_min == -2**167);\n\n\t\tint176 int176_min = type(int176).min;\n\t\trequire(int176_min == -2**175);\n\n\t\tint184 int184_min = type(int184).min;\n\t\trequire(int184_min == -2**183);\n\n\t\tint192 int192_min = type(int192).min;\n\t\trequire(int192_min == -2**191);\n\n\t\treturn true;\n\t}\n\n\tfunction intMinD() public pure returns(bool) {\n\n\t\tint200 int200_min = type(int200).min;\n\t\trequire(int200_min == -2**199);\n\n\t\tint208 int208_min = type(int208).min;\n\t\trequire(int208_min == -2**207);\n\n\t\tint216 int216_min = type(int216).min;\n\t\trequire(int216_min == -2**215);\n\n\t\tint224 int224_min = type(int224).min;\n\t\trequire(int224_min == -2**223);\n\n\t\tint232 int232_min = type(int232).min;\n\t\trequire(int232_min == -2**231);\n\n\t\tint240 int240_min = type(int240).min;\n\t\trequire(int240_min == -2**239);\n\n\t\tint248 int248_min = type(int248).min;\n\t\trequire(int248_min == -2**247);\n\n\t\tint256 int256_min = type(int256).min;\n\t\trequire(int256_min == -2**255);\n\n\t\treturn true;\n\t}\n\n\tfunction intMaxA() public pure returns (bool) {\n\n\t\tint8 int8_max = type(int8).max;\n\t\trequire(int8_max == 2**7-1);\n\n\t\tint16 int16_max = type(int16).max;\n\t\trequire(int16_max == 2**15-1);\n\n\t\tint24 int24_max = type(int24).max;\n\t\trequire(int24_max == 2**23-1);\n\n\t\tint32 int32_max = type(int32).max;\n\t\trequire(int32_max == 2**31-1);\n\n\t\tint40 int40_max = type(int40).max;\n\t\trequire(int40_max == 2**39-1);\n\n\t\tint48 int48_max = type(int48).max;\n\t\trequire(int48_max == 2**47-1);\n\n\t\tint56 int56_max = type(int56).max;\n\t\trequire(int56_max == 2**55-1);\n\n\t\tint64 int64_max = type(int64).max;\n\t\trequire(int64_max == 2**63-1);\n\n\t\treturn true;\n\t}\n\n\tfunction intMaxB() public pure returns(bool) {\n\n\t\tint72 int72_max = type(int72).max;\n\t\trequire(int72_max == 2**71-1);\n\n\t\tint80 int80_max = type(int80).max;\n\t\trequire(int80_max == 2**79-1);\n\n\t\tint88 int88_max = type(int88).max;\n\t\trequire(int88_max == 2**87-1);\n\n\t\tint96 int96_max = type(int96).max;\n\t\trequire(int96_max == 2**95-1);\n\n\t\tint104 int104_max = type(int104).max;\n\t\trequire(int104_max == 2**103-1);\n\n\t\tint112 int112_max = type(int112).max;\n\t\trequire(int112_max == 2**111-1);\n\n\t\tint120 int120_max = type(int120).max;\n\t\trequire(int120_max == 2**119-1);\n\n\t\tint128 int128_max = type(int128).max;\n\t\trequire(int128_max == 2**127-1);\n\n\t\treturn true;\n\t}\n\n\tfunction intMaxC() public pure returns (bool) {\n\n\t\tint136 int136_max = type(int136).max;\n\t\trequire(int136_max == 2**135-1);\n\n\t\tint144 int144_max = type(int144).max;\n\t\trequire(int144_max == 2**143-1);\n\n\t\tint152 int152_max = type(int152).max;\n\t\trequire(int152_max == 2**151-1);\n\n\t\tint160 int160_max = type(int160).max;\n\t\trequire(int160_max == 2**159-1);\n\n\t\tint168 int168_max = type(int168).max;\n\t\trequire(int168_max == 2**167-1);\n\n\t\tint176 int176_max = type(int176).max;\n\t\trequire(int176_max == 2**175-1);\n\n\t\tint184 int184_max = type(int184).max;\n\t\trequire(int184_max == 2**183-1);\n\n\t\tint192 int192_max = type(int192).max;\n\t\trequire(int192_max == 2**191-1);\n\n\t\treturn true;\n\t}\n\n\tfunction intMaxD() public pure returns(bool) {\n\n\t\tint200 int200_max = type(int200).max;\n\t\trequire(int200_max == 2**199-1);\n\n\t\tint208 int208_max = type(int208).max;\n\t\trequire(int208_max == 2**207-1);\n\n\t\tint216 int216_max = type(int216).max;\n\t\trequire(int216_max == 2**215-1);\n\n\t\tint224 int224_max = type(int224).max;\n\t\trequire(int224_max == 2**223-1);\n\n\t\tint232 int232_max = type(int232).max;\n\t\trequire(int232_max == 2**231-1);\n\n\t\tint240 int240_max = type(int240).max;\n\t\trequire(int240_max == 2**239-1);\n\n\t\tint248 int248_max = type(int248).max;\n\t\trequire(int248_max == 2**247-1);\n\n\t\tint256 int256_max = type(int256).max;\n\t\trequire(int256_max == 2**255-1);\n\n\t\treturn true;\n\t}\n}\n// ----\n// intMinA() -> true\n// intMinB() -> true\n// intMinC() -> true\n// intMinD() -> true\n// intMaxA() -> true\n// intMaxB() -> true\n// intMaxC() -> true\n// intMaxD() -> true\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}