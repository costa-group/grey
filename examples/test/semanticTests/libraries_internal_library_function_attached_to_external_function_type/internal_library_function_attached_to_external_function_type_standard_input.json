{
    "language": "Solidity",
    "sources": {
        "internal_library_function_attached_to_external_function_type.sol": {
            "content": "library L {\n    // NOTE: External function takes up two stack slots\n    function double(function(uint) external pure returns (uint) f, uint x) internal pure returns (uint) {\n        return f(x) * 2;\n    }\n}\n\ncontract C {\n    using L for function(uint) external pure returns (uint);\n\n    function identity(uint x) external pure returns (uint) {\n        return x;\n    }\n\n    function test(uint value) public returns (uint) {\n        return this.identity.double(value);\n    }\n}\n// ----\n// test(uint256): 5 -> 10\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}