{"language": "Solidity", "sources": {"swap_in_storage_overwrite.sol": {"content": "// This tests a swap in storage which does not work as one\n// might expect because we do not have temporary storage.\n// (x, y) = (y, x) is the same as\n// y = x;\n// x = y;\ncontract c {\n    struct S {\n        uint256 a;\n        uint256 b;\n    }\n    S public x;\n    S public y;\n\n    function set() public {\n        x.a = 1;\n        x.b = 2;\n        y.a = 3;\n        y.b = 4;\n    }\n\n    function swap() public {\n        (x, y) = (y, x);\n    }\n}\n// ----\n// x() -> 0, 0\n// y() -> 0, 0\n// set() ->\n// gas irOptimized: 109684\n// gas legacy: 109727\n// gas legacyOptimized: 109680\n// x() -> 1, 2\n// y() -> 3, 4\n// swap() ->\n// x() -> 1, 2\n// y() -> 1, 2\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}