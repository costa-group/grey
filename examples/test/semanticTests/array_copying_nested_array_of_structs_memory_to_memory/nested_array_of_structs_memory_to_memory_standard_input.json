{
    "language": "Solidity",
    "sources": {
        "nested_array_of_structs_memory_to_memory.sol": {
            "content": "pragma abicoder v2;\n\ncontract C {\n    struct S {\n        uint8 x;\n        uint8 y;\n    }\n\n    function test1(S[1][2] memory a) public returns (S[1][2] memory r) {\n        r = a;\n    }\n\n    function test2(S[1][] memory a) public returns (S[1][] memory r) {\n        r = a;\n    }\n\n    function test3(S[][2] memory a) public returns (S[][2] memory r) {\n        r = a;\n    }\n}\n// ----\n// test1((uint8,uint8)[1][2]): 1, 2, 3, 4 -> 1, 2, 3, 4\n// test2((uint8,uint8)[1][]): 0x20, 3, 7, 11, 13, 17, 19, 23 -> 0x20, 3, 7, 11, 13, 17, 19, 23\n// test3((uint8,uint8)[][2]): 0x20, 0x40, 0xa0, 1, 3, 7, 2, 11, 13, 17, 19 -> 0x20, 0x40, 0xa0, 1, 3, 7, 2, 11, 13, 17, 19\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}