{"language": "Solidity", "sources": {"array_memory_as_parameter.sol": {"content": "contract C {\n\tfunction test(uint256 len, uint idx) public returns (uint256)\n\t{\n\t\tuint[] memory array = new uint[](len);\n\t\tuint result = receiver(array, idx);\n\n\t\tfor (uint256 i = 0; i < array.length; i++)\n\t\t\trequire(array[i] == i + 1);\n\n\t\treturn result;\n\t}\n\tfunction receiver(uint[] memory array, uint idx) public returns (uint256)\n\t{\n\t\tfor (uint256 i = 0; i < array.length; i++)\n\t\t\tarray[i] = i + 1;\n\n\t\treturn array[idx];\n\t}\n}\n// ----\n// test(uint256,uint256): 0, 0 -> FAILURE, hex\"4e487b71\", 0x32\n// test(uint256,uint256): 1, 0 -> 1\n// test(uint256,uint256): 10, 5 -> 6\n// test(uint256,uint256): 10, 50 -> FAILURE, hex\"4e487b71\", 0x32\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}, "viaIR": true}}