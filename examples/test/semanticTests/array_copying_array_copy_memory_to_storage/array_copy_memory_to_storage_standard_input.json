{
    "language": "Solidity",
    "sources": {
        "array_copy_memory_to_storage.sol": {
            "content": "contract C {\n    uint128[13] unused;\n    uint32[] a;\n    uint32[3] b;\n    function f() public returns (uint32, uint256) {\n        uint32[] memory m = new uint32[](3);\n        m[0] = 1;\n        m[1] = 2;\n        m[2] = 3;\n        a = m;\n        assert(a[0] == m[0]);\n        assert(a[1] == m[1]);\n        assert(a[2] == m[2]);\n        return (a[0], a.length);\n    }\n    function g() public returns (uint32, uint32, uint32) {\n        uint32[3] memory m;\n        m[0] = 1; m[1] = 2; m[2] = 3;\n        a = m;\n        b = m;\n        assert(a[0] == b[0] && a[1] == b[1] && a[2] == b[2]);\n        assert(a.length == b.length);\n        return (a[0], b[1], a[2]);\n    }\n}\n// ----\n// f() -> 1, 3\n// g() -> 1, 2, 3\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}