{"language": "Solidity", "sources": {"array_of_structs_containing_arrays_calldata_to_memory.sol": {"content": "pragma abicoder v2;\n\ncontract C {\n    struct S {\n        uint256[] a;\n    }\n\n    function f(S[] calldata c) external returns (uint256, uint256) {\n        S[] memory s = c;\n        assert(s.length == c.length);\n        for (uint i = 0; i < s.length; i++) {\n            assert(s[i].a.length == c[i].a.length);\n            for (uint j = 0; j < s[i].a.length; j++) {\n                assert(s[i].a[j] == c[i].a[j]);\n            }\n        }\n        return (s[1].a.length, s[1].a[0]);\n    }\n}\n// ----\n// f((uint256[])[]): 0x20, 3, 0x60, 0x60, 0x60, 0x20, 3, 1, 2, 3 -> 3, 1\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}