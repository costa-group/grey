{
    "language": "Solidity",
    "sources": {
        "packed_storage_structs_enum.sol": {
            "content": "contract C {\n    enum small {A, B, C, D}\n    enum larger {A, B, C, D, E}\n    struct str {\n        small a;\n        small b;\n        larger c;\n        larger d;\n    }\n    str data;\n\n    function test() public returns (uint256) {\n        data.a = small.B;\n        if (data.a != small.B) return 2;\n        data.b = small.C;\n        if (data.b != small.C) return 3;\n        data.c = larger.D;\n        if (data.c != larger.D) return 4;\n        if (data.a != small.B) return 5;\n        data.a = small.C;\n        if (data.a != small.C) return 6;\n        if (data.b != small.C) return 7;\n        data.b = small.D;\n        if (data.b != small.D) return 8;\n        if (data.c != larger.D) return 9;\n        data.c = larger.B;\n        if (data.c != larger.B) return 10;\n        return 1;\n    }\n}\n// ----\n// test() -> 1\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}