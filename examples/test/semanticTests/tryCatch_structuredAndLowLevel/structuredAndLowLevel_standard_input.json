{
    "language": "Solidity",
    "sources": {
        "structuredAndLowLevel.sol": {
            "content": "contract C {\n    function g(bool b) public pure returns (uint, uint) {\n        require(b, \"message longer than 32 bytes 32 bytes 32 bytes 32 bytes 32 bytes 32 bytes 32 bytes\");\n        return (1, 2);\n    }\n    function f(bool cond) public returns (uint x, uint y, bytes memory txt) {\n        try this.g(cond) returns (uint a, uint b) {\n            (x, y) = (a, b);\n            txt = \"success\";\n        } catch Error(string memory s) {\n            x = 99;\n            txt = bytes(s);\n        } catch (bytes memory s) {\n            x = 98;\n            txt = s;\n        }\n    }\n}\n// ====\n// EVMVersion: >=byzantium\n// ----\n// f(bool): true -> 1, 2, 96, 7, \"success\"\n// f(bool): false -> 99, 0, 96, 82, \"message longer than 32 bytes 32 \", \"bytes 32 bytes 32 bytes 32 bytes\", \" 32 bytes 32 bytes\"\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}