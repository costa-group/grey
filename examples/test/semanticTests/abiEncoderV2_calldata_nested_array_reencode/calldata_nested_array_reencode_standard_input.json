{
    "language": "Solidity",
    "sources": {
        "calldata_nested_array_reencode.sol": {
            "content": "pragma abicoder v2;\n\ncontract C {\n    function f(uint[][] calldata a) public returns (bytes memory) {\n        return abi.encode(a);\n    }\n    function g(uint8[][][] calldata a) public returns (bytes memory) {\n        return abi.encode(a);\n    }\n    function h(uint16[][2][] calldata a) public returns (bytes memory) {\n        return abi.encode(a);\n    }\n    function i(uint16[][][1] calldata a) public returns (bytes memory) {\n        return abi.encode(a);\n    }\n    function j(uint16[2][][] calldata a) public returns (bytes memory) {\n        return abi.encode(a);\n    }\n}\n// ====\n// revertStrings: debug\n// ----\n// f(uint256[][]): 0x20, 1, 0x20, 0 -> 0x20, 0x80, 0x20, 1, 0x20, 0\n// f(uint256[][]): 0x20, 1, 0x20, 1 -> FAILURE, hex\"08c379a0\", 0x20, 0x1e, \"Invalid calldata access stride\"\n// f(uint256[][]): 0x20, 1, 0x20, 2 -> FAILURE, hex\"08c379a0\", 0x20, 0x1e, \"Invalid calldata access stride\"\n// f(uint256[][]): 0x20, 1, 0x20, 3 -> FAILURE, hex\"08c379a0\", 0x20, 0x1e, \"Invalid calldata access stride\"\n// g(uint8[][][]): 0x20, 2, 0x40, 0x0140, 2, 0x40, 0x80, 1, 10, 2, 11, 12, 0 -> 0x20, 0x01a0, 0x20, 2, 0x40, 0x0140, 2, 0x40, 0x80, 1, 10, 2, 11, 12, 0\n// g(uint8[][][]): 0x20, 2, 0x40, 0x0140, 2, 0x40, 0x80, 1, 10, 2, 11, 12 -> FAILURE, hex\"08c379a0\", 0x20, 0x1e, \"Invalid calldata access offset\"\n// g(uint8[][][]): 0x20, 2, 0x40, 0x0140, 2, 0x40, 0x80, 1, 10, 2, 11, 12, 1, 0x20, 0 -> 0x20, 0x01e0, 0x20, 2, 0x40, 0x0140, 2, 0x40, 0x80, 1, 10, 2, 11, 12, 1, 0x20, 0\n// g(uint8[][][]): 0x20, 2, 0x40, 0x0140, 2, 0x40, 0x80, 1, 10, 2, 11, 12, 1, 0x20, 0, 1 -> 0x20, 0x01e0, 0x20, 2, 0x40, 0x0140, 2, 0x40, 0x80, 1, 10, 2, 11, 12, 1, 0x20, 0\n// h(uint16[][2][]): 0x20, 2, 0x40, 0x0120, 0x40, 0x80, 1, 10, 2, 11, 12, 0x40, 0x60, 0, 1, 13 -> 0x20, 0x0200, 0x20, 2, 0x40, 288, 0x40, 0x80, 1, 10, 2, 11, 12, 0x40, 0x60, 0, 1, 13\n// h(uint16[][2][]): 0x20, 2, 0x40, 0x0120, 0x40, 0x80, 1, 10, 2, 11, 12, 0x40, 0x60, 0, 1 -> FAILURE, hex\"08c379a0\", 0x20, 0x1e, \"Invalid calldata access stride\"\n// i(uint16[][][1]): 0x20, 0x20, 2, 0x40, 0x80, 1, 10, 2, 11, 12 -> 0x20, 0x0140, 0x20, 0x20, 2, 0x40, 0x80, 1, 10, 2, 11, 12\n// i(uint16[][][1]): 0x20, 0x20, 2, 0x40, 0x80, 1, 10, 2, 11 -> FAILURE, hex\"08c379a0\", 0x20, 0x1e, \"Invalid calldata access stride\"\n// j(uint16[2][][]): 0x20, 2, 0x40, 0xa0, 1, 0x0a, 11, 2, 12, 13, 14, 15 -> 0x20, 0x0180, 0x20, 2, 0x40, 0xa0, 1, 10, 11, 2, 12, 13, 14, 15\n// j(uint16[2][][]): 0x20, 2, 0x40, 0xa0, 1, 0x0a, 11, 2, 12, 13, 14 -> FAILURE, hex\"08c379a0\", 0x20, 0x1e, \"Invalid calldata access stride\"\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}