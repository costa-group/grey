{
    "language": "Solidity",
    "sources": {
        "copy_struct_with_nested_array_from_calldata_to_storage.sol": {
            "content": "pragma abicoder v2;\n\ncontract C {\n    struct S {\n        uint8[1] x;\n        uint8[] y;\n    }\n\n    S s;\n\n    function test(S calldata src) public {\n        s = src;\n\n        require(s.x[0] == 3);\n        require(s.y.length == 2);\n        require(s.y[0] == 7);\n        require(s.y[1] == 11);\n    }\n}\n// ----\n// test((uint8[1],uint8[])): 0x20, 3, 0x40, 2, 7, 11\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}