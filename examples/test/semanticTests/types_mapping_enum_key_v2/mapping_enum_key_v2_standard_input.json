{
    "language": "Solidity",
    "sources": {
        "mapping_enum_key_v2.sol": {
            "content": "pragma abicoder v2;\nenum E { A, B, C }\ncontract test {\n    mapping(E => uint8) table;\n    function get(E k) public returns (uint8 v) {\n        return table[k];\n    }\n    function set(E k, uint8 v) public {\n        table[k] = v;\n    }\n}\n// ====\n// EVMVersion: >=byzantium\n// ----\n// get(uint8): 0 -> 0\n// get(uint8): 0x01 -> 0\n// get(uint8): 0x02 -> 0\n// get(uint8): 0x03 -> FAILURE\n// get(uint8): 0xa7 -> FAILURE\n// set(uint8,uint8): 0x01, 0xa1 ->\n// get(uint8): 0 -> 0\n// get(uint8): 0x01 -> 0xa1\n// get(uint8): 0xa7 -> FAILURE\n// set(uint8,uint8): 0x00, 0xef ->\n// get(uint8): 0 -> 0xef\n// get(uint8): 0x01 -> 0xa1\n// get(uint8): 0xa7 -> FAILURE\n// set(uint8,uint8): 0x01, 0x05 ->\n// get(uint8): 0 -> 0xef\n// get(uint8): 0x01 -> 0x05\n// get(uint8): 0xa7 -> FAILURE\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}