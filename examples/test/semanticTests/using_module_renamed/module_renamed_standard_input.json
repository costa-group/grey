{
    "language": "Solidity",
    "sources": {
        "module_renamed.sol": {
            "content": "==== Source: A ====\nfunction f(uint x) pure returns (uint) {\n    return x + 2;\n}\nfunction g(uint x) pure returns (uint) {\n    return x + 8;\n}\n\n==== Source: B ====\nimport {f as g, g as f} from \"A\";\n\n==== Source: C ====\ncontract C {\n\tfunction test(uint x, uint y) public pure returns (uint, uint) {\n        return (x.f(), y.g());\n    }\n}\n\nusing {M.g, M.f} for uint;\n\nimport \"B\" as M;\n\n// ----\n// test(uint256,uint256): 1, 1 -> 9, 3\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}