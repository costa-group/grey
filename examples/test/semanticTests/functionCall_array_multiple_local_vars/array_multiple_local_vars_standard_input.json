{
    "language": "Solidity",
    "sources": {
        "array_multiple_local_vars.sol": {
            "content": "contract test {\n    function f(uint256[] calldata seq) external pure returns (uint256) {\n        uint i = 0;\n        uint sum = 0;\n        while (i < seq.length)\n        {\n            uint idx = i;\n            if (idx >= 10) break;\n            uint x = seq[idx];\n            if (x >= 1000) {\n                uint n = i + 1;\n                i = n;\n                continue;\n            }\n            else {\n                uint y = sum + x;\n                sum = y;\n            }\n            if (sum >= 500) return sum;\n            i++;\n        }\n        return sum;\n    }\n}\n// ----\n// f(uint256[]): 32, 3, 1000, 1, 2 -> 3\n// f(uint256[]): 32, 3, 100, 500, 300 -> 600\n// f(uint256[]): 32, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 111 -> 55\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}