{
    "language": "Solidity",
    "sources": {
        "recursion.sol": {
            "content": "function exp(uint base, uint exponent) pure returns (uint power) {\n    if (exponent == 0)\n        return 1;\n    power = exp(base, exponent / 2);\n    power *= power;\n    if (exponent & 1 == 1)\n        power *= base;\n}\n\ncontract C {\n  function g(uint base, uint exponent) public pure returns (uint) {\n      return exp(base, exponent);\n  }\n}\n// ----\n// g(uint256,uint256): 0, 0 -> 1\n// g(uint256,uint256): 0, 1 -> 0x00\n// g(uint256,uint256): 1, 0 -> 1\n// g(uint256,uint256): 2, 3 -> 8\n// g(uint256,uint256): 3, 10 -> 59049\n// g(uint256,uint256): 2, 255 -> -57896044618658097711785492504343953926634992332820282019728792003956564819968\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}