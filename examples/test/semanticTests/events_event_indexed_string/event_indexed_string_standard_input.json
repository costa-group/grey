{
    "language": "Solidity",
    "sources": {
        "event_selector_file_level.sol": {
            "content": "event E();\n\nlibrary L {\n    event E();\n}\n\ncontract C {\n    function main() external pure returns (bytes32, bytes32) {\n        assert(E.selector == L.E.selector);\n\n        return (E.selector, L.E.selector);\n    }\n}\n// ----\n// main() -> 0x92bbf6e823a631f3c8e09b1c8df90f378fb56f7fbc9701827e1ff8aad7f6a028, 0x92bbf6e823a631f3c8e09b1c8df90f378fb56f7fbc9701827e1ff8aad7f6a028\n"
        },
        "event_emit_via_interface.sol": {
            "content": "interface I {\n    event Event(address indexed _from, uint256 _value);\n}\n\ncontract C {\n    function emitEvent(uint256 _value) public {\n        emit I.Event(msg.sender, _value);\n    }\n}\n\n// ----\n// emitEvent(uint256): 100 ->\n// ~ emit Event(address,uint256): #0x1212121212121212121212121212120000000012, 0x64\n"
        },
        "event_access_through_base_name_emit.sol": {
            "content": "contract A {\n    event x();\n}\ncontract B is A {\n    function f() public returns (uint) {\n        emit A.x();\n        return 1;\n    }\n}\n// ----\n// f() -> 1\n// ~ emit x()\n"
        },
        "event_indexed_function2.sol": {
            "content": "contract C {\n    event TestA(function() external indexed);\n    event TestB(function(uint256) external indexed);\n    function f1() public {\n        emit TestA(this.f1);\n    }\n    function f2(uint256 a) public {\n        emit TestB(this.f2);\n    }\n}\n// ----\n// f1() ->\n// ~ emit TestA(function): #0xc06afe3a8444fc0004668591e8306bfb9968e79ec27fc3050000000000000000\n// f2(uint256): 1 ->\n// ~ emit TestB(function): #0xc06afe3a8444fc0004668591e8306bfb9968e79ebf3724af0000000000000000\n"
        },
        "event_struct_memory_v2.sol": {
            "content": "pragma abicoder v2;\ncontract C {\n    struct S { uint a; }\n    event E(S);\n    function createEvent(uint x) public {\n        emit E(S(x));\n    }\n}\n// ----\n// createEvent(uint256): 42 ->\n// ~ emit E((uint256)): 0x2a\n"
        },
        "event_dynamic_nested_array_storage_v2.sol": {
            "content": "pragma abicoder v2;\ncontract C {\n    event E(uint[][]);\n    uint[][] arr;\n    function createEvent(uint x) public {\n        arr.push(new uint[](2));\n        arr.push(new uint[](2));\n        arr[0][0] = x;\n        arr[0][1] = x + 1;\n        arr[1][0] = x + 2;\n        arr[1][1] = x + 3;\n        emit E(arr);\n    }\n}\n// ----\n// createEvent(uint256): 42 ->\n// ~ emit E(uint256[][]): 0x20, 0x02, 0x40, 0xa0, 0x02, 0x2a, 0x2b, 0x02, 0x2c, 0x2d\n// gas irOptimized: 185148\n// gas legacy: 187493\n// gas legacyOptimized: 184548\n"
        },
        "event_indexed_mixed.sol": {
            "content": "contract C {\n    // Indexed parameters are always listed first in the output.\n    // The data is the ABI encoding of just the non-indexed parameters,\n    // so putting the indexed parameters \"in between\" would mess\n    // up the offsets for the reader.\n    event E(uint a, uint indexed r, uint b, bytes c);\n    function deposit() public {\n        emit E(1, 2, 3, \"def\");\n    }\n}\n// ----\n// deposit() ->\n// ~ emit E(uint256,uint256,uint256,bytes): #0x02, 0x01, 0x03, 0x60, 0x03, \"def\"\n// gas irOptimized: 23709\n// gas legacy: 24342\n// gas legacyOptimized: 23753\n"
        },
        "event.sol": {
            "content": "contract ClientReceipt {\n    event Deposit(address indexed _from, bytes32 indexed _id, uint _value);\n    function deposit(bytes32 _id, bool _manually) public payable {\n        if (_manually) {\n            bytes32 s = 0x19dacbf83c5de6658e14cbf7bcae5c15eca2eedecf1c66fbca928e4d351bea0f;\n            uint value = msg.value;\n            address sender = msg.sender;\n            assembly {\n                mstore(0, value)\n                log3(0, 0x20, s, sender, _id)\n            }\n        } else {\n            emit Deposit(msg.sender, _id, msg.value);\n        }\n    }\n}\n// ----\n// deposit(bytes32,bool), 18 wei: 0x1234, true ->\n// ~ emit Deposit(address,bytes32,uint256): #0x1212121212121212121212121212120000000012, #0x1234, 0x12\n// deposit(bytes32,bool), 18 wei: 0x1234, false ->\n// ~ emit Deposit(address,bytes32,uint256): #0x1212121212121212121212121212120000000012, #0x1234, 0x12\n"
        },
        "event_dynamic_array_memory.sol": {
            "content": "contract C {\n    event E(uint[]);\n    function createEvent(uint x) public {\n        uint[] memory arr = new uint[](3);\n        arr[0] = x;\n        arr[1] = x + 1;\n        arr[2] = x + 2;\n        emit E(arr);\n    }\n}\n// ----\n// createEvent(uint256): 42 ->\n// ~ emit E(uint256[]): 0x20, 0x03, 0x2a, 0x2b, 0x2c\n"
        },
        "event_emit_from_other_contract.sol": {
            "content": "contract D {\n    event Deposit(address indexed _from, bytes32 indexed _id, uint _value);\n    function deposit(bytes32 _id) public payable {\n        emit Deposit(msg.sender, _id, msg.value);\n    }\n}\ncontract C {\n    D d;\n    constructor() {\n        d = new D();\n    }\n    function deposit(bytes32 _id) public payable {\n        d.deposit(_id);\n    }\n}\n// ----\n// constructor() ->\n// gas irOptimized: 113970\n// gas irOptimized code: 51400\n// gas legacy: 119791\n// gas legacy code: 125200\n// gas legacyOptimized: 114187\n// gas legacyOptimized code: 57400\n// deposit(bytes32), 18 wei: 0x1234 ->\n// ~ emit Deposit(address,bytes32,uint256) from 0x137aa4dfc0911524504fcd4d98501f179bc13b4a: #0xc06afe3a8444fc0004668591e8306bfb9968e79e, #0x1234, 0x00\n"
        },
        "event_dynamic_nested_array_memory_v2.sol": {
            "content": "pragma abicoder v2;\ncontract C {\n    event E(uint[][]);\n    function createEvent(uint x) public {\n        uint[][] memory arr = new uint[][](2);\n        arr[0] = new uint[](2);\n        arr[1] = new uint[](2);\n        arr[0][0] = x;\n        arr[0][1] = x + 1;\n        arr[1][0] = x + 2;\n        arr[1][1] = x + 3;\n        emit E(arr);\n    }\n}\n// ----\n// createEvent(uint256): 42 ->\n// ~ emit E(uint256[][]): 0x20, 0x02, 0x40, 0xa0, 0x02, 0x2a, 0x2b, 0x02, 0x2c, 0x2d\n"
        },
        "event_indexed_function.sol": {
            "content": "contract C {\n    event Test(function() external indexed);\n    function f() public {\n        emit Test(this.f);\n    }\n}\n// ----\n// f() ->\n// ~ emit Test(function): #0xc06afe3a8444fc0004668591e8306bfb9968e79e26121ff00000000000000000\n"
        },
        "event_struct_storage_v2.sol": {
            "content": "pragma abicoder v2;\ncontract C {\n    struct S { uint a; }\n    event E(S);\n    S s;\n    function createEvent(uint x) public {\n        s.a = x;\n        emit E(s);\n    }\n}\n// ----\n// createEvent(uint256): 42 ->\n// ~ emit E((uint256)): 0x2a\n"
        },
        "event_dynamic_array_memory_v2.sol": {
            "content": "pragma abicoder v2;\ncontract C {\n    event E(uint[]);\n    function createEvent(uint x) public {\n        uint[] memory arr = new uint[](3);\n        arr[0] = x;\n        arr[1] = x + 1;\n        arr[2] = x + 2;\n        emit E(arr);\n    }\n}\n// ----\n// createEvent(uint256): 42 ->\n// ~ emit E(uint256[]): 0x20, 0x03, 0x2a, 0x2b, 0x2c\n"
        },
        "event_selector.sol": {
            "content": "library L {\n    event E();\n}\n\nlibrary S {\n    event E(uint);\n}\n\nlibrary T {\n    event E();\n}\n\ninterface I {\n    event E();\n}\n\ncontract B {\n    event E();\n}\n\ncontract D {\n    event F();\n}\n\ncontract C is D {\n    function test1() external pure returns (bytes32, bytes32, bytes32, bytes32) {\n        assert(L.E.selector == T.E.selector);\n        assert(I.E.selector == L.E.selector);\n        assert(T.E.selector == I.E.selector);\n        assert(B.E.selector == T.E.selector);\n\n        assert(L.E.selector != S.E.selector);\n        assert(T.E.selector != S.E.selector);\n        assert(I.E.selector != S.E.selector);\n        assert(B.E.selector != S.E.selector);\n\n        return (L.E.selector, S.E.selector, I.E.selector, B.E.selector);\n    }\n\n    bytes32 s1 = L.E.selector;\n    bytes32 s2 = S.E.selector;\n    bytes32 s3 = T.E.selector;\n    bytes32 s4 = I.E.selector;\n    bytes32 s5 = B.E.selector;\n    function test2() external returns (bytes32, bytes32, bytes32, bytes32, bytes32) {\n        return (s1, s2, s3, s4, s5);\n    }\n\n    function test3() external returns (bytes32) {\n        return (F.selector);\n    }\n}\n// ====\n// compileViaYul: also\n// ----\n// test1() -> 0x92bbf6e823a631f3c8e09b1c8df90f378fb56f7fbc9701827e1ff8aad7f6a028, 0x2ff0672f372fbe844b353429d4510ea5e43683af134c54f75f789ff57bc0c0, 0x92bbf6e823a631f3c8e09b1c8df90f378fb56f7fbc9701827e1ff8aad7f6a028, 0x92bbf6e823a631f3c8e09b1c8df90f378fb56f7fbc9701827e1ff8aad7f6a028\n// test2() -> 0x92bbf6e823a631f3c8e09b1c8df90f378fb56f7fbc9701827e1ff8aad7f6a028, 0x2ff0672f372fbe844b353429d4510ea5e43683af134c54f75f789ff57bc0c0, 0x92bbf6e823a631f3c8e09b1c8df90f378fb56f7fbc9701827e1ff8aad7f6a028, 0x92bbf6e823a631f3c8e09b1c8df90f378fb56f7fbc9701827e1ff8aad7f6a028, 0x92bbf6e823a631f3c8e09b1c8df90f378fb56f7fbc9701827e1ff8aad7f6a028\n// test3() -> 0x28811f5935c16a099486acb976b3a6b4942950a1425a74e9eb3e9b7f7135e12a\n"
        },
        "events_with_same_name.sol": {
            "content": "contract ClientReceipt {\n    event Deposit();\n    event Deposit(address _addr);\n    event Deposit(address _addr, uint _amount);\n    event Deposit(address _addr, bool _flag);\n    function deposit() public returns (uint) {\n        emit Deposit();\n        return 1;\n    }\n    function deposit(address _addr) public returns (uint) {\n        emit Deposit(_addr);\n        return 2;\n    }\n    function deposit(address _addr, uint _amount) public returns (uint) {\n        emit Deposit(_addr, _amount);\n        return 3;\n    }\n    function deposit(address _addr, bool _flag) public returns (uint) {\n        emit Deposit(_addr, _flag);\n        return 4;\n    }\n}\n// ----\n// deposit() -> 1\n// ~ emit Deposit()\n// deposit(address): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988 -> 2\n// ~ emit Deposit(address): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988\n// deposit(address,uint256): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988, 100 -> 3\n// ~ emit Deposit(address,uint256): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988, 0x64\n// deposit(address,bool): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988, false -> 4\n// ~ emit Deposit(address,bool): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988, false\n"
        },
        "event_signature_in_library.sol": {
            "content": "pragma abicoder v2;\nlibrary L {\n    struct S {\n        uint8 a;\n        int16 b;\n    }\n    event E(S indexed, S);\n    function f() internal {\n        S memory s;\n        emit E(s, s);\n    }\n}\ncontract C {\n    constructor() {\n        L.f();\n    }\n}\n// ----\n// constructor()\n// ~ emit E((uint8,int16),(uint8,int16)): #0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5, 0x00, 0x00\n// gas legacy: 150602\n"
        },
        "event_dynamic_array_storage_v2.sol": {
            "content": "pragma abicoder v2;\ncontract C {\n    event E(uint[]);\n    uint[] arr;\n    function createEvent(uint x) public {\n        while (arr.length < 3)\n            arr.push();\n        arr[0] = x;\n        arr[1] = x + 1;\n        arr[2] = x + 2;\n        emit E(arr);\n    }\n}\n// ----\n// createEvent(uint256): 42 ->\n// ~ emit E(uint256[]): 0x20, 0x03, 0x2a, 0x2b, 0x2c\n// gas irOptimized: 114231\n// gas legacy: 116313\n// gas legacyOptimized: 114407\n"
        },
        "events_with_same_name_file_level.sol": {
            "content": "event Deposit();\nevent Deposit(address _addr);\nevent Deposit(address _addr, uint _amount);\nevent Deposit(address _addr, bool _flag);\n\ncontract ClientReceipt {\n    function deposit() public returns (uint) {\n        emit Deposit();\n        return 1;\n    }\n    function deposit(address _addr) public returns (uint) {\n        emit Deposit(_addr);\n        return 2;\n    }\n    function deposit(address _addr, uint _amount) public returns (uint) {\n        emit Deposit(_addr, _amount);\n        return 3;\n    }\n    function deposit(address _addr, bool _flag) public returns (uint) {\n        emit Deposit(_addr, _flag);\n        return 4;\n    }\n}\n// ----\n// deposit() -> 1\n// ~ emit Deposit()\n// deposit(address): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988 -> 2\n// ~ emit Deposit(address): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988\n// deposit(address,uint256): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988, 100 -> 3\n// ~ emit Deposit(address,uint256): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988, 0x64\n// deposit(address,bool): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988, false -> 4\n// ~ emit Deposit(address,bool): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988, false\n"
        },
        "event_lots_of_data.sol": {
            "content": "contract ClientReceipt {\n    event Deposit(address _from, bytes32 _id, uint _value, bool _flag);\n    function deposit(bytes32 _id) public payable {\n        emit Deposit(msg.sender, _id, msg.value, true);\n    }\n}\n// ----\n// deposit(bytes32), 18 wei: 0x1234 ->\n// ~ emit Deposit(address,bytes32,uint256,bool): 0x1212121212121212121212121212120000000012, 0x1234, 0x12, true\n"
        },
        "event_emit_file_level.sol": {
            "content": "event Deposit(address indexed _from, bytes32 indexed _id, uint _value);\n\ncontract ClientReceipt {\n    function deposit(bytes32 _id) public payable {\n        emit Deposit(msg.sender, _id, msg.value);\n    }\n}\n// ----\n// deposit(bytes32), 18 wei: 0x1234 ->\n// ~ emit Deposit(address,bytes32,uint256): #0x1212121212121212121212121212120000000012, #0x1234, 0x12\n"
        },
        "event_emit_from_a_foreign_contract.sol": {
            "content": "contract C {\n    event E();\n}\n\ncontract D {\n    function test() public {\n        emit C.E();\n    }\n}\n\n// ----\n// test() ->\n// ~ emit E()\n"
        },
        "event_really_lots_of_data.sol": {
            "content": "contract ClientReceipt {\n    event Deposit(uint fixeda, bytes dynx, uint fixedb);\n    function deposit() public {\n        emit Deposit(10, msg.data, 15);\n    }\n}\n// ----\n// deposit() ->\n// ~ emit Deposit(uint256,bytes,uint256): 0x0a, 0x60, 0x0f, 0x04, 0xd0e30db000000000000000000000000000000000000000000000000000000000\n"
        },
        "event_anonymous_with_topics.sol": {
            "content": "contract ClientReceipt {\n    event Deposit(address indexed _from, bytes32 indexed _id, uint indexed _value, uint indexed _value2, bytes32 data) anonymous;\n    function deposit(bytes32 _id) public payable {\n        emit Deposit(msg.sender, _id, msg.value, 2, \"abc\");\n    }\n}\n// ----\n// deposit(bytes32), 18 wei: 0x1234 ->\n// ~ emit <anonymous>: #0x1212121212121212121212121212120000000012, #0x1234, #0x12, #0x02, \"abc\"\n"
        },
        "event_really_lots_of_data_from_storage.sol": {
            "content": "contract ClientReceipt {\n    bytes x;\n    event Deposit(uint fixeda, bytes dynx, uint fixedb);\n    function deposit() public {\n        x.push(\"A\");\n        x.push(\"B\");\n        x.push(\"C\");\n        emit Deposit(10, x, 15);\n    }\n}\n// ----\n// deposit() ->\n// ~ emit Deposit(uint256,bytes,uint256): 0x0a, 0x60, 0x0f, 0x03, \"ABC\"\n"
        },
        "events_with_same_name_inherited_emit.sol": {
            "content": "contract A {\n    event Deposit();\n}\n\ncontract B {\n    event Deposit(address _addr);\n}\n\ncontract ClientReceipt is A, B {\n    event Deposit(address _addr, uint _amount);\n    function deposit() public returns (uint) {\n        emit Deposit();\n        return 1;\n    }\n    function deposit(address _addr) public returns (uint) {\n        emit Deposit(_addr);\n        return 1;\n    }\n    function deposit(address _addr, uint _amount) public returns (uint) {\n        emit Deposit(_addr, _amount);\n        return 1;\n    }\n}\n// ----\n// deposit() -> 1\n// ~ emit Deposit()\n// deposit(address): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988 -> 1\n// ~ emit Deposit(address): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988\n// deposit(address,uint256): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988, 100 -> 1\n// ~ emit Deposit(address,uint256): 0x5082a85c489be6aa0f2e6693bf09cc1bbd35e988, 0x64\n"
        },
        "event_anonymous_with_signature_collision2.sol": {
            "content": "contract ClientReceipt {\n    event Withdraw(uint _value, string owner);\n    event Deposit(uint256 indexed _from, bytes32 indexed _id, uint _value) anonymous;\n    function deposit(bytes32 _id) public payable {\n        emit Deposit(0x5ddaa77ac5bda319ba947e31bee594711f39ed1b20d079d438dbad5ed729fb30, _id, msg.value); // 0x5ddaa77a -> 'Withdraw(uint256,string)'\n    }\n}\n// ----\n// deposit(bytes32), 18 wei: 0x1234 ->\n// ~ emit Withdraw(uint256,string): #0x1234, 0x12\n"
        },
        "event_shadowing_file_level.sol": {
            "content": "event E();\n\nlibrary L1 {\n    event E(string);\n}\n\nlibrary L2 {\n    event E();\n}\n\nlibrary K {\n    function main() internal pure returns (bytes32, bytes32, bytes32) {\n        // Here E is the global event.\n        assert(E.selector != L1.E.selector);\n        assert(E.selector == L2.E.selector);\n\n        return (E.selector, L1.E.selector, L2.E.selector);\n    }\n}\n\ncontract C {\n    event E(string);\n\n    function main() external pure returns (bytes32, bytes32, bytes32) {\n        // Here E is the local event.\n        assert(E.selector == L1.E.selector);\n        assert(E.selector != L2.E.selector);\n\n        return (E.selector, L1.E.selector, L2.E.selector);\n    }\n\n    function k_main() external pure returns (bytes32, bytes32, bytes32) {\n        return K.main();\n    }\n}\n// ----\n// main() -> 0x3e9992c940c54ea252d3a34557cc3d3014281525c43d694f89d5f3dfd820b07d, 0x3e9992c940c54ea252d3a34557cc3d3014281525c43d694f89d5f3dfd820b07d, 0x92bbf6e823a631f3c8e09b1c8df90f378fb56f7fbc9701827e1ff8aad7f6a028\n// k_main() -> 0x92bbf6e823a631f3c8e09b1c8df90f378fb56f7fbc9701827e1ff8aad7f6a028, 0x3e9992c940c54ea252d3a34557cc3d3014281525c43d694f89d5f3dfd820b07d, 0x92bbf6e823a631f3c8e09b1c8df90f378fb56f7fbc9701827e1ff8aad7f6a028\n"
        },
        "event_string.sol": {
            "content": "contract C {\n    event E(string r);\n    function deposit() public {\n        emit E(\"HELLO WORLD\");\n    }\n}\n// ----\n// deposit() ->\n// ~ emit E(string): 0x20, 0x0b, \"HELLO WORLD\"\n"
        },
        "event_static_calldata_uint_array_and_dynamic_array.sol": {
            "content": "contract C {\n    event E(uint[], uint[1]);\n\n    // This case used to be affected by the buggy cleanup due to ABIEncoderV2HeadOverflowWithStaticArrayCleanup bug.\n    function f(uint[] memory a, uint[1] calldata b) public {\n        emit E(a, b);\n    }\n}\n// ----\n// f(uint256[],uint256[1]): 0x40, 0xff, 1, 0xffff ->\n// ~ emit E(uint256[],uint256[1]): 0x40, 0xff, 0x01, 0xffff\n"
        },
        "event_really_really_lots_of_data_from_storage.sol": {
            "content": "contract ClientReceipt {\n    bytes x;\n    event Deposit(uint fixeda, bytes dynx, uint fixedb);\n    function deposit() public {\n        x = new bytes(31);\n        x[0] = \"A\";\n        x[1] = \"B\";\n        x[2] = \"C\";\n        x[30] = \"Z\";\n        emit Deposit(10, x, 15);\n    }\n}\n// ----\n// deposit() ->\n// ~ emit Deposit(uint256,bytes,uint256): 0x0a, 0x60, 0x0f, 0x1f, \"ABC\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0Z\"\n"
        },
        "simple.sol": {
            "content": "contract C {\n    event E();\n}\n\ncontract Test is C {\n    event E(uint256, uint256);\n    function f() public {\n        emit C.E();\n        emit E(1,2);\n    }\n}\n// ====\n// compileViaYul: also\n// ----\n// f() ->\n// ~ emit E()\n// ~ emit E(uint256,uint256): 0x01, 0x02\n"
        },
        "event_constructor.sol": {
            "content": "contract ClientReceipt {\n    event Deposit(address indexed _from, bytes32 indexed _id, uint _value);\n    constructor() {\n        emit Deposit(msg.sender, bytes32(\"abc\"), 7);\n    }\n}\n// ----\n// constructor()\n// ~ emit Deposit(address,bytes32,uint256): #0x1212121212121212121212121212120000000012, #\"abc\", 0x07\n"
        },
        "event_dynamic_array_storage.sol": {
            "content": "contract C {\n    event E(uint[]);\n    uint[] arr;\n    function createEvent(uint x) public {\n        while (arr.length < 3)\n            arr.push();\n        arr[0] = x;\n        arr[1] = x + 1;\n        arr[2] = x + 2;\n        emit E(arr);\n    }\n}\n// ----\n// createEvent(uint256): 42 ->\n// ~ emit E(uint256[]): 0x20, 0x03, 0x2a, 0x2b, 0x2c\n// gas irOptimized: 114231\n// gas legacy: 116313\n// gas legacyOptimized: 114407\n"
        },
        "event_emit_interface_event_via_library.sol": {
            "content": "interface I {\n    event E();\n}\n\nlibrary L {\n    function f() internal {\n        emit I.E();\n    }\n}\n\ncontract C {\n    function g() public {\n        L.f();\n    }\n}\n\n// ----\n// g() ->\n// ~ emit E()\n"
        },
        "event_anonymous.sol": {
            "content": "contract ClientReceipt {\n    event Deposit() anonymous;\n    function deposit() public {\n        emit Deposit();\n    }\n}\n// ----\n// deposit() ->\n// ~ emit <anonymous>\n"
        },
        "event_emit_from_a_foreign_contract_same_name.sol": {
            "content": "contract C {\n    event E(uint256 value);\n}\n\ncontract D {\n    event E(uint256 value);\n\n    function test() public {\n        emit C.E(1);\n        emit E(2);\n    }\n}\n\n// ----\n// test() ->\n// ~ emit E(uint256): 0x01\n// ~ emit E(uint256): 0x02\n"
        },
        "event_indexed_string.sol": {
            "content": "contract C {\n    string x;\n    uint[4] y;\n    event E(string indexed r, uint[4] indexed t);\n    function deposit() public {\n        for (uint i = 0; i < 90; i++)\n            bytes(x).push(0);\n        for (uint8 i = 0; i < 90; i++)\n            bytes(x)[i] = bytes1(i);\n        y[0] = 4;\n        y[1] = 5;\n        y[2] = 6;\n        y[3] = 7;\n        emit E(x, y);\n    }\n}\n// ----\n// deposit() ->\n// ~ emit E(string,uint256[4]): #0xa7fb06bb999a5eb9aff9e0779953f4e1e4ce58044936c2f51c7fb879b85c08bd, #0xe755d8cc1a8cde16a2a31160dcd8017ac32d7e2f13215b29a23cdae40a78aa81\n// gas irOptimized: 332788\n// gas legacy: 366022\n// gas legacyOptimized: 362429\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}