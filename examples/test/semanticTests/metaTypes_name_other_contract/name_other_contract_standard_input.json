{"language": "Solidity", "sources": {"name_other_contract.sol": {"content": "abstract contract A {\n    function f() virtual public pure;\n}\n\ninterface I {\n    function f() external pure;\n}\n\ncontract C {\n    function f() pure public {\n    }\n}\n\ncontract Test is C {\n    function c() public pure returns (string memory) {\n        return type(C).name;\n    }\n    function a() public pure returns (string memory) {\n        return type(A).name;\n    }\n    function i() public pure returns (string memory) {\n        return type(I).name;\n    }\n}\n// ----\n// c() -> 0x20, 1, \"C\"\n// a() -> 0x20, 1, \"A\"\n// i() -> 0x20, 1, \"I\"\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}, "viaIR": true}}