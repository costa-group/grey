{
    "language": "Solidity",
    "sources": {
        "detect_div_overflow.sol": {
            "content": "contract C {\n    function f(uint a, uint b) public pure returns (uint x) {\n        x = a / b;\n    }\n    function g(int8 a, int8 b) public pure returns (int8 x) {\n        x = a / b;\n    }\n    function h(uint256 a, uint256 b) public pure returns (uint256 x) {\n        x = a / b;\n    }\n}\n// ----\n// f(uint256,uint256): 10, 3 -> 3\n// f(uint256,uint256): 1, 0 -> FAILURE, hex\"4e487b71\", 0x12\n// f(uint256,uint256): 0, 0 -> FAILURE, hex\"4e487b71\", 0x12\n// f(uint256,uint256): 0, 1 -> 0\n// g(int8,int8): -10, 3 -> -3\n// g(int8,int8): -10, -3 -> 3\n// g(int8,int8): -10, 0 -> FAILURE, hex\"4e487b71\", 0x12\n// g(int8,int8): -128, 1 -> -128\n// g(int8,int8): -128, -2 -> 64\n// g(int8,int8): -128, 2 -> -64\n// g(int8,int8): -128, -1 -> FAILURE, hex\"4e487b71\", 0x11\n// g(int8,int8): -127, -1 -> 127\n// h(uint256,uint256): 0x8000000000000000000000000000000000000000000000000000000000000000, -1 -> 0\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}