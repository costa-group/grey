{
    "language": "Solidity",
    "sources": {
        "uint.sol": {
            "content": "contract test {\n\n\tfunction uintMinA() public pure returns(bool) {\n\n\t\tuint8 uint8_min = type(uint8).min;\n\t\trequire(uint8_min == 0);\n\n\t\tuint16 uint16_min = type(uint16).min;\n\t\trequire(uint16_min == 0);\n\n\t\tuint24 uint24_min = type(uint24).min;\n\t\trequire(uint24_min == 0);\n\n\t\tuint32 uint32_min = type(uint32).min;\n\t\trequire(uint32_min == 0);\n\n\t\tuint40 uint40_min = type(uint40).min;\n\t\trequire(uint40_min == 0);\n\n\t\tuint48 uint48_min = type(uint48).min;\n\t\trequire(uint48_min == 0);\n\n\t\tuint56 uint56_min = type(uint56).min;\n\t\trequire(uint56_min == 0);\n\n\t\tuint64 uint64_min = type(uint64).min;\n\t\trequire(uint64_min == 0);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMinB() public pure returns(bool) {\n\n\t\tuint72 uint72_min = type(uint72).min;\n\t\trequire(uint72_min == 0);\n\n\t\tuint80 uint80_min = type(uint80).min;\n\t\trequire(uint80_min == 0);\n\n\t\tuint88 uint88_min = type(uint88).min;\n\t\trequire(uint88_min == 0);\n\n\t\tuint96 uint96_min = type(uint96).min;\n\t\trequire(uint96_min == 0);\n\n\t\tuint104 uint104_min = type(uint104).min;\n\t\trequire(uint104_min == 0);\n\n\t\tuint112 uint112_min = type(uint112).min;\n\t\trequire(uint112_min == 0);\n\n\t\tuint120 uint120_min = type(uint120).min;\n\t\trequire(uint120_min == 0);\n\n\t\tuint128 uint128_min = type(uint128).min;\n\t\trequire(uint128_min == 0);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMinC() public pure returns(bool) {\n\n\t\tuint136 uint136_min = type(uint136).min;\n\t\trequire(uint136_min == 0);\n\n\t\tuint144 uint144_min = type(uint144).min;\n\t\trequire(uint144_min == 0);\n\n\t\tuint152 uint152_min = type(uint152).min;\n\t\trequire(uint152_min == 0);\n\n\t\tuint160 uint160_min = type(uint160).min;\n\t\trequire(uint160_min == 0);\n\n\t\tuint168 uint168_min = type(uint168).min;\n\t\trequire(uint168_min == 0);\n\n\t\tuint176 uint176_min = type(uint176).min;\n\t\trequire(uint176_min == 0);\n\n\t\tuint184 uint184_min = type(uint184).min;\n\t\trequire(uint184_min == 0);\n\n\t\tuint192 uint192_min = type(uint192).min;\n\t\trequire(uint192_min == 0);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMinD() public pure returns(bool) {\n\n\t\tuint200 uint200_min = type(uint200).min;\n\t\trequire(uint200_min == 0);\n\n\t\tuint208 uint208_min = type(uint208).min;\n\t\trequire(uint208_min == 0);\n\n\t\tuint216 uint216_min = type(uint216).min;\n\t\trequire(uint216_min == 0);\n\n\t\tuint224 uint224_min = type(uint224).min;\n\t\trequire(uint224_min == 0);\n\n\t\tuint232 uint232_min = type(uint232).min;\n\t\trequire(uint232_min == 0);\n\n\t\tuint240 uint240_min = type(uint240).min;\n\t\trequire(uint240_min == 0);\n\n\t\tuint248 uint248_min = type(uint248).min;\n\t\trequire(uint248_min == 0);\n\n\t\tuint256 uint256_min = type(uint256).min;\n\t\trequire(uint256_min == 0);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMaxA() public pure returns (bool) {\n\n\t\tuint8 uint8_max = type(uint8).max;\n\t\trequire(uint8_max == 2**8-1);\n\n\t\tuint16 uint16_max = type(uint16).max;\n\t\trequire(uint16_max == 2**16-1);\n\n\t\tuint24 uint24_max = type(uint24).max;\n\t\trequire(uint24_max == 2**24-1);\n\n\t\tuint32 uint32_max = type(uint32).max;\n\t\trequire(uint32_max == 2**32-1);\n\n\t\tuint40 uint40_max = type(uint40).max;\n\t\trequire(uint40_max == 2**40-1);\n\n\t\tuint48 uint48_max = type(uint48).max;\n\t\trequire(uint48_max == 2**48-1);\n\n\t\tuint56 uint56_max = type(uint56).max;\n\t\trequire(uint56_max == 2**56-1);\n\n\t\tuint64 uint64_max = type(uint64).max;\n\t\trequire(uint64_max == 2**64-1);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMaxB() public pure returns (bool) {\n\n\t\tuint72 uint72_max = type(uint72).max;\n\t\trequire(uint72_max == 2**72-1);\n\n\t\tuint80 uint80_max = type(uint80).max;\n\t\trequire(uint80_max == 2**80-1);\n\n\t\tuint88 uint88_max = type(uint88).max;\n\t\trequire(uint88_max == 2**88-1);\n\n\t\tuint96 uint96_max = type(uint96).max;\n\t\trequire(uint96_max == 2**96-1);\n\n\t\tuint104 uint104_max = type(uint104).max;\n\t\trequire(uint104_max == 2**104-1);\n\n\t\tuint112 uint112_max = type(uint112).max;\n\t\trequire(uint112_max == 2**112-1);\n\n\t\tuint120 uint120_max = type(uint120).max;\n\t\trequire(uint120_max == 2**120-1);\n\n\t\tuint128 uint128_max = type(uint128).max;\n\t\trequire(uint128_max == 2**128-1);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMaxC() public pure returns (bool) {\n\n\t\tuint136 uint136_max = type(uint136).max;\n\t\trequire(uint136_max == 2**136-1);\n\n\t\tuint144 uint144_max = type(uint144).max;\n\t\trequire(uint144_max == 2**144-1);\n\n\t\tuint152 uint152_max = type(uint152).max;\n\t\trequire(uint152_max == 2**152-1);\n\n\t\tuint160 uint160_max = type(uint160).max;\n\t\trequire(uint160_max == 2**160-1);\n\n\t\tuint168 uint168_max = type(uint168).max;\n\t\trequire(uint168_max == 2**168-1);\n\n\t\tuint176 uint176_max = type(uint176).max;\n\t\trequire(uint176_max == 2**176-1);\n\n\t\tuint184 uint184_max = type(uint184).max;\n\t\trequire(uint184_max == 2**184-1);\n\n\t\tuint192 uint192_max = type(uint192).max;\n\t\trequire(uint192_max == 2**192-1);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMaxD() public pure returns(bool) {\n\t\tuint200 uint200_max = type(uint200).max;\n\t\trequire(uint200_max == 2**200-1);\n\n\t\tuint208 uint208_max = type(uint208).max;\n\t\trequire(uint208_max == 2**208-1);\n\n\t\tuint216 uint216_max = type(uint216).max;\n\t\trequire(uint216_max == 2**216-1);\n\n\t\tuint224 uint224_max = type(uint224).max;\n\t\trequire(uint224_max == 2**224-1);\n\n\t\tuint232 uint232_max = type(uint232).max;\n\t\trequire(uint232_max == 2**232-1);\n\n\t\tuint240 uint240_max = type(uint240).max;\n\t\trequire(uint240_max == 2**240-1);\n\n\t\tuint248 uint248_max = type(uint248).max;\n\t\trequire(uint248_max == 2**248-1);\n\n\t\tuint256 uint256_max = type(uint256).max;\n\t\trequire(uint256_max == 2**256-1);\n\n\t\treturn true;\n\t}\n}\n// ----\n// uintMinA() -> true\n// uintMinB() -> true\n// uintMinC() -> true\n// uintMinD() -> true\n// uintMaxA() -> true\n// uintMaxB() -> true\n// uintMaxC() -> true\n// uintMaxD() -> true\n"
        },
        "int.sol": {
            "content": "contract test {\n\n\tfunction intMinA() public pure returns (bool) {\n\n\t\tint8 int8_min = type(int8).min;\n\t\trequire(int8_min == -2**7);\n\n\t\tint16 int16_min = type(int16).min;\n\t\trequire(int16_min == -2**15);\n\n\t\tint24 int24_min = type(int24).min;\n\t\trequire(int24_min == -2**23);\n\n\t\tint32 int32_min = type(int32).min;\n\t\trequire(int32_min == -2**31);\n\n\t\tint40 int40_min = type(int40).min;\n\t\trequire(int40_min == -2**39);\n\n\t\tint48 int48_min = type(int48).min;\n\t\trequire(int48_min == -2**47);\n\n\t\tint56 int56_min = type(int56).min;\n\t\trequire(int56_min == -2**55);\n\n\t\tint64 int64_min = type(int64).min;\n\t\trequire(int64_min == -2**63);\n\n\t\treturn true;\n\t}\n\n\tfunction intMinB() public pure returns(bool) {\n\n\t\tint72 int72_min = type(int72).min;\n\t\trequire(int72_min == -2**71);\n\n\t\tint80 int80_min = type(int80).min;\n\t\trequire(int80_min == -2**79);\n\n\t\tint88 int88_min = type(int88).min;\n\t\trequire(int88_min == -2**87);\n\n\t\tint96 int96_min = type(int96).min;\n\t\trequire(int96_min == -2**95);\n\n\t\tint104 int104_min = type(int104).min;\n\t\trequire(int104_min == -2**103);\n\n\t\tint112 int112_min = type(int112).min;\n\t\trequire(int112_min == -2**111);\n\n\t\tint120 int120_min = type(int120).min;\n\t\trequire(int120_min == -2**119);\n\n\t\tint128 int128_min = type(int128).min;\n\t\trequire(int128_min == -2**127);\n\n\t\treturn true;\n\t}\n\n\tfunction intMinC() public pure returns (bool) {\n\n\t\tint136 int136_min = type(int136).min;\n\t\trequire(int136_min == -2**135);\n\n\t\tint144 int144_min = type(int144).min;\n\t\trequire(int144_min == -2**143);\n\n\t\tint152 int152_min = type(int152).min;\n\t\trequire(int152_min == -2**151);\n\n\t\tint160 int160_min = type(int160).min;\n\t\trequire(int160_min == -2**159);\n\n\t\tint168 int168_min = type(int168).min;\n\t\trequire(int168_min == -2**167);\n\n\t\tint176 int176_min = type(int176).min;\n\t\trequire(int176_min == -2**175);\n\n\t\tint184 int184_min = type(int184).min;\n\t\trequire(int184_min == -2**183);\n\n\t\tint192 int192_min = type(int192).min;\n\t\trequire(int192_min == -2**191);\n\n\t\treturn true;\n\t}\n\n\tfunction intMinD() public pure returns(bool) {\n\n\t\tint200 int200_min = type(int200).min;\n\t\trequire(int200_min == -2**199);\n\n\t\tint208 int208_min = type(int208).min;\n\t\trequire(int208_min == -2**207);\n\n\t\tint216 int216_min = type(int216).min;\n\t\trequire(int216_min == -2**215);\n\n\t\tint224 int224_min = type(int224).min;\n\t\trequire(int224_min == -2**223);\n\n\t\tint232 int232_min = type(int232).min;\n\t\trequire(int232_min == -2**231);\n\n\t\tint240 int240_min = type(int240).min;\n\t\trequire(int240_min == -2**239);\n\n\t\tint248 int248_min = type(int248).min;\n\t\trequire(int248_min == -2**247);\n\n\t\tint256 int256_min = type(int256).min;\n\t\trequire(int256_min == -2**255);\n\n\t\treturn true;\n\t}\n\n\tfunction intMaxA() public pure returns (bool) {\n\n\t\tint8 int8_max = type(int8).max;\n\t\trequire(int8_max == 2**7-1);\n\n\t\tint16 int16_max = type(int16).max;\n\t\trequire(int16_max == 2**15-1);\n\n\t\tint24 int24_max = type(int24).max;\n\t\trequire(int24_max == 2**23-1);\n\n\t\tint32 int32_max = type(int32).max;\n\t\trequire(int32_max == 2**31-1);\n\n\t\tint40 int40_max = type(int40).max;\n\t\trequire(int40_max == 2**39-1);\n\n\t\tint48 int48_max = type(int48).max;\n\t\trequire(int48_max == 2**47-1);\n\n\t\tint56 int56_max = type(int56).max;\n\t\trequire(int56_max == 2**55-1);\n\n\t\tint64 int64_max = type(int64).max;\n\t\trequire(int64_max == 2**63-1);\n\n\t\treturn true;\n\t}\n\n\tfunction intMaxB() public pure returns(bool) {\n\n\t\tint72 int72_max = type(int72).max;\n\t\trequire(int72_max == 2**71-1);\n\n\t\tint80 int80_max = type(int80).max;\n\t\trequire(int80_max == 2**79-1);\n\n\t\tint88 int88_max = type(int88).max;\n\t\trequire(int88_max == 2**87-1);\n\n\t\tint96 int96_max = type(int96).max;\n\t\trequire(int96_max == 2**95-1);\n\n\t\tint104 int104_max = type(int104).max;\n\t\trequire(int104_max == 2**103-1);\n\n\t\tint112 int112_max = type(int112).max;\n\t\trequire(int112_max == 2**111-1);\n\n\t\tint120 int120_max = type(int120).max;\n\t\trequire(int120_max == 2**119-1);\n\n\t\tint128 int128_max = type(int128).max;\n\t\trequire(int128_max == 2**127-1);\n\n\t\treturn true;\n\t}\n\n\tfunction intMaxC() public pure returns (bool) {\n\n\t\tint136 int136_max = type(int136).max;\n\t\trequire(int136_max == 2**135-1);\n\n\t\tint144 int144_max = type(int144).max;\n\t\trequire(int144_max == 2**143-1);\n\n\t\tint152 int152_max = type(int152).max;\n\t\trequire(int152_max == 2**151-1);\n\n\t\tint160 int160_max = type(int160).max;\n\t\trequire(int160_max == 2**159-1);\n\n\t\tint168 int168_max = type(int168).max;\n\t\trequire(int168_max == 2**167-1);\n\n\t\tint176 int176_max = type(int176).max;\n\t\trequire(int176_max == 2**175-1);\n\n\t\tint184 int184_max = type(int184).max;\n\t\trequire(int184_max == 2**183-1);\n\n\t\tint192 int192_max = type(int192).max;\n\t\trequire(int192_max == 2**191-1);\n\n\t\treturn true;\n\t}\n\n\tfunction intMaxD() public pure returns(bool) {\n\n\t\tint200 int200_max = type(int200).max;\n\t\trequire(int200_max == 2**199-1);\n\n\t\tint208 int208_max = type(int208).max;\n\t\trequire(int208_max == 2**207-1);\n\n\t\tint216 int216_max = type(int216).max;\n\t\trequire(int216_max == 2**215-1);\n\n\t\tint224 int224_max = type(int224).max;\n\t\trequire(int224_max == 2**223-1);\n\n\t\tint232 int232_max = type(int232).max;\n\t\trequire(int232_max == 2**231-1);\n\n\t\tint240 int240_max = type(int240).max;\n\t\trequire(int240_max == 2**239-1);\n\n\t\tint248 int248_max = type(int248).max;\n\t\trequire(int248_max == 2**247-1);\n\n\t\tint256 int256_max = type(int256).max;\n\t\trequire(int256_max == 2**255-1);\n\n\t\treturn true;\n\t}\n}\n// ----\n// intMinA() -> true\n// intMinB() -> true\n// intMinC() -> true\n// intMinD() -> true\n// intMaxA() -> true\n// intMaxB() -> true\n// intMaxC() -> true\n// intMaxD() -> true\n"
        },
        "small_signed_types.sol": {
            "content": "contract test {\n    function run() public returns(int256 y) {\n        return -int32(10) * -int64(20);\n    }\n}\n// ----\n// run() -> 200\n"
        },
        "many_local_variables.sol": {
            "content": "contract test {\n    function run(uint x1, uint x2, uint x3) public returns(uint y) {\n        uint8 a = 0x1; uint8 b = 0x10; uint16 c = 0x100;\n        y = a + b + c + x1 + x2 + x3;\n        y += b + x2;\n    }\n}\n// ----\n// run(uint256,uint256,uint256): 0x1000, 0x10000, 0x100000 -> 0x121121\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}