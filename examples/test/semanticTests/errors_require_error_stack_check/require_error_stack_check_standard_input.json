{
    "language": "Solidity",
    "sources": {
        "require_error_stack_check.sol": {
            "content": "// The purpose of this test is to make sure that error constructor call\n// stack items are popped from the stack in the success branch, i.e. when\n// require condition is true.\ncontract C {\n    error E(uint, uint, uint, function(uint256) external pure returns (uint256));\n    uint public x;\n\n    function e(uint256 y) external pure returns (uint256) {\n        return y;\n    }\n\n    function f(bool condition, uint a, uint b, uint c) public {\n        require(condition, E(a, b, c, this.e));\n        x = b;\n    }\n}\n// ----\n// f(bool,uint256,uint256,uint256): true, 42, 4242, 424242 ->\n// x() -> 4242\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}