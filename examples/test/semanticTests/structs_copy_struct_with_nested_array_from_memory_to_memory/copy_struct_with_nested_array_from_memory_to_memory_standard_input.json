{"language": "Solidity", "sources": {"copy_struct_with_nested_array_from_memory_to_memory.sol": {"content": "pragma abicoder v2;\n\ncontract C {\n    struct S {\n        uint8[1] x;\n        uint8[] y;\n    }\n\n    function test(S memory s) public returns (S memory r) {\n        return r;\n    }\n}\n// ----\n// test((uint8[1],uint8[])): 0x20, 3, 0x40, 2, 7, 11 -> 0x20, 0, 0x40, 0\n// test((uint8[1],uint8[])): 0x20, 3, 0x40, 3, 17, 19, 23 -> 0x20, 0, 0x40, 0\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}