{
    "language": "Solidity",
    "sources": {
        "nested_array_element_storage_to_memory.sol": {
            "content": "pragma abicoder v2;\n\ncontract C {\n    uint8[][][] a1 = new uint8[][][](2);\n    uint8[][][2] a2;\n    uint8[][2][] a3 = new uint8[][2][](1);\n    uint8[2][][] a4 = new uint8[2][][](2);\n\n    constructor() {\n        a1[1] = new uint8[][](2);\n        a1[1][0] = [3, 4];\n        a1[1][1] = [5, 6];\n\n        a2[0] = new uint8[][](2);\n        a2[0][0] = [6, 7];\n        a2[0][1] = [8, 9];\n        a2[1] = new uint8[][](2);\n        a2[1][0] = [10, 11];\n\n        a3[0][0] = [3, 4];\n        a3[0][1] = [5, 6];\n\n        a4[0] = new uint8[2][](1);\n        a4[0][0] = [17, 23];\n        a4[1] = new uint8[2][](1);\n        a4[1][0] = [19, 31];\n    }\n\n    function test1() public returns (uint8[][] memory) {\n        return a1[1];\n    }\n\n    function test2() public returns (uint8[][] memory) {\n        return a2[0];\n    }\n\n    function test3() public returns (uint8[][2] memory) {\n        return a3[0];\n    }\n\n    function test4() public returns (uint8[2][] memory) {\n        return a4[1];\n    }\n\n    function test5() public returns (uint8[][][] memory) {\n        uint8[][][] memory tmp = new uint8[][][](3);\n        tmp[1] = a1[1];\n        return tmp;\n    }\n\n    function test6() public returns (uint8[][2][] memory) {\n        uint8[][2][] memory tmp = new uint8[][2][](2);\n        tmp[0] = a3[0];\n        return tmp;\n    }\n\n    function test7() public returns (uint8[2][][] memory) {\n        uint8[2][][] memory tmp = new uint8[2][][](1);\n        tmp[0] = a4[0];\n        return tmp;\n    }\n}\n// ----\n// test1() -> 0x20, 2, 0x40, 0xa0, 2, 3, 4, 2, 5, 6\n// test2() -> 0x20, 2, 0x40, 0xa0, 2, 6, 7, 2, 8, 9\n// test3() -> 0x20, 0x40, 0xa0, 2, 3, 4, 2, 5, 6\n// test4() -> 0x20, 1, 19, 31\n// test5() -> 0x20, 3, 0x60, 0x80, 0x01a0, 0, 2, 0x40, 0xa0, 2, 3, 4, 2, 5, 6, 0\n// test6() -> 0x20, 2, 0x40, 0x0140, 0x40, 0xa0, 2, 3, 4, 2, 5, 6, 0x40, 0x60, 0, 0\n// test7() -> 0x20, 1, 0x20, 1, 17, 23\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}