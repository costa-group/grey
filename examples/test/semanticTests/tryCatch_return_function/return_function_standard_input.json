{
    "language": "Solidity",
    "sources": {
        "return_function.sol": {
            "content": "contract C {\n    function g() public returns (uint a, function() external h, uint b) {\n        a = 1;\n        h = C(address(0x1234)).fun;\n        b = 9;\n    }\n    function f() public returns (uint, function() external, uint) {\n        // Note that the function type uses two stack slots.\n        try this.g() returns (uint a, function() external h, uint b) {\n            return (a, h, b);\n        } catch {\n        }\n    }\n    function fun() public pure {}\n}\n// ----\n// f() -> 0x1, 0x1234946644cd0000000000000000, 9\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}