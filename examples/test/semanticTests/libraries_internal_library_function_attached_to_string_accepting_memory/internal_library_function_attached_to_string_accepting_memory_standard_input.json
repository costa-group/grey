{
    "language": "Solidity",
    "sources": {
        "internal_library_function_attached_to_string_accepting_memory.sol": {
            "content": "library L {\n    function at(string memory a, uint i) internal pure returns (uint8) {\n        return uint8(bytes(a)[i]);\n    }\n}\n\ncontract C {\n    using L for string;\n\n    function secondChar() public returns (uint8) {\n        string memory input = \"abc\";\n        return input.at(1);\n    }\n}\n// ----\n// secondChar() -> 98\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}