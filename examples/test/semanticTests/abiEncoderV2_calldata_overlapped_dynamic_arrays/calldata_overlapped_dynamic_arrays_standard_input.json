{"language": "Solidity", "sources": {"calldata_overlapped_dynamic_arrays.sol": {"content": "pragma abicoder v2;\n\ncontract C {\n    uint[] s;\n    uint[2] n;\n\n    function f_memory(uint[] calldata a, uint[2] calldata b) public returns (uint[] memory, uint[2] memory) {\n        return (a, b);\n    }\n\n    function f_encode(uint[] calldata a, uint[2] calldata b) public returns (bytes memory) {\n        return abi.encode(a, b);\n    }\n\n    function f_which(uint[] calldata a, uint[2] calldata b, uint which) public returns (bytes memory) {\n        return abi.encode(a[which], b[1]);\n    }\n\n    function f_storage(uint[] calldata a, uint[2] calldata b ) public returns (bytes memory) {\n        s = a;\n        n = b;\n        return abi.encode(s);\n    }\n}\n// ----\n// f_memory(uint256[],uint256[2]): 0x20, 1, 2 -> 0x60, 0x01, 0x02, 1, 2\n// f_memory(uint256[],uint256[2]): 0x40, 1, 2, 5, 6 -> 0x60, 1, 2, 2, 5, 6\n// f_memory(uint256[],uint256[2]): 0x40, 1, 2, 5 -> FAILURE\n// f_encode(uint256[],uint256[2]): 0x20, 1, 2 -> 0x20, 0xa0, 0x60, 1, 2, 1, 2\n// f_encode(uint256[],uint256[2]): 0x40, 1, 2, 5, 6 -> 0x20, 0xc0, 0x60, 1, 2, 2, 5, 6\n// f_encode(uint256[],uint256[2]): 0x40, 1, 2, 5 -> FAILURE\n// f_which(uint256[],uint256[2],uint256): 0x40, 1, 2, 1, 5 -> 0x20, 0x40, 5, 2\n// f_which(uint256[],uint256[2],uint256): 0x40, 1, 2, 1, 5, 6 -> 0x20, 0x40, 5, 2\n// f_which(uint256[],uint256[2],uint256): 0x40, 1, 2, 1 -> FAILURE\n// f_storage(uint256[],uint256[2]): 0x20, 1, 2 -> 0x20, 0x60, 0x20, 1, 2\n// gas irOptimized: 111409\n// gas legacy: 112707\n// gas legacyOptimized: 111845\n// f_storage(uint256[],uint256[2]): 0x40, 1, 2, 5, 6 -> 0x20, 0x80, 0x20, 2, 5, 6\n// f_storage(uint256[],uint256[2]): 0x40, 1, 2, 5 -> FAILURE\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}, "viaIR": true}}