{
    "language": "Solidity",
    "sources": {
        "mapping_array_internal_argument.sol": {
            "content": "contract test {\n    mapping(uint8 => uint8)[2] a;\n    mapping(uint8 => uint8)[2] b;\n    function set_internal(mapping(uint8 => uint8)[2] storage m, uint8 key, uint8 value1, uint8 value2) internal returns (uint8, uint8) {\n        uint8 oldValue1 = m[0][key];\n        uint8 oldValue2 = m[1][key];\n        m[0][key] = value1;\n        m[1][key] = value2;\n        return (oldValue1, oldValue2);\n    }\n    function set(uint8 key, uint8 value_a1, uint8 value_a2, uint8 value_b1, uint8 value_b2) public returns (uint8 old_a1, uint8 old_a2, uint8 old_b1, uint8 old_b2) {\n        (old_a1, old_a2) = set_internal(a, key, value_a1, value_a2);\n        (old_b1, old_b2) = set_internal(b, key, value_b1, value_b2);\n    }\n    function get(uint8 key) public returns (uint8, uint8, uint8, uint8) {\n        return (a[0][key], a[1][key], b[0][key], b[1][key]);\n    }\n}\n// ----\n// set(uint8,uint8,uint8,uint8,uint8): 1, 21, 22, 42, 43 -> 0, 0, 0, 0\n// gas irOptimized: 111237\n// gas legacy: 113742\n// gas legacyOptimized: 111768\n// get(uint8): 1 -> 21, 22, 42, 43\n// set(uint8,uint8,uint8,uint8,uint8): 1, 10, 30, 11, 31 -> 21, 22, 42, 43\n// get(uint8): 1 -> 10, 30, 11, 31\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}