{
    "language": "Solidity",
    "sources": {
        "calldata_struct_with_bytes_to_memory.sol": {
            "content": "pragma abicoder v2;\n\ncontract C {\n    struct S {\n        uint256 a;\n        bytes b;\n        uint256 c;\n    }\n\n    function f(S calldata c)\n        external\n        pure\n        returns (uint256, bytes1, bytes1, uint256)\n    {\n        S memory m = c;\n        return (m.a, m.b[0], m.b[1], m.c);\n    }\n}\n// ----\n// f((uint256,bytes,uint256)): 0x20, 42, 0x60, 23, 2, \"ab\" -> 42, \"a\", \"b\", 23\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}