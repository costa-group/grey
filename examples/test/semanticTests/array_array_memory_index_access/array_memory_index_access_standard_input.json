{
    "language": "Solidity",
    "sources": {
        "array_memory_index_access.sol": {
            "content": "contract C {\n\tfunction index(uint256 len) public returns (bool)\n\t{\n\t\tuint[] memory array = new uint[](len);\n\n\t\tfor (uint256 i = 0; i < len; i++)\n\t\t\tarray[i] = i + 1;\n\n\t\tfor (uint256 i = 0; i < len; i++)\n\t\t\trequire(array[i] == i + 1, \"Unexpected value in array!\");\n\n\t\treturn array.length == len;\n\t}\n\tfunction accessIndex(uint256 len, int256 idx) public returns (uint256)\n\t{\n\t\tuint[] memory array = new uint[](len);\n\n\t\tfor (uint256 i = 0; i < len; i++)\n\t\t\tarray[i] = i + 1;\n\n\t\treturn array[uint256(idx)];\n\t}\n}\n// ----\n// index(uint256): 0 -> true\n// index(uint256): 10 -> true\n// index(uint256): 20 -> true\n// index(uint256): 0xFF -> true\n// gas irOptimized: 108272\n// gas legacy: 181536\n// gas legacyOptimized: 117442\n// accessIndex(uint256,int256): 10, 1 -> 2\n// accessIndex(uint256,int256): 10, 0 -> 1\n// accessIndex(uint256,int256): 10, 11 -> FAILURE, hex\"4e487b71\", 0x32\n// accessIndex(uint256,int256): 10, 10 -> FAILURE, hex\"4e487b71\", 0x32\n// accessIndex(uint256,int256): 10, -1 -> FAILURE, hex\"4e487b71\", 0x32\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}