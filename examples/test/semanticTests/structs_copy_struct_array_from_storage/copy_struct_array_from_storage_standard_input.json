{"language": "Solidity", "sources": {"copy_struct_array_from_storage.sol": {"content": "pragma abicoder v2;\n\nstruct S { uint value; }\n\ncontract Test {\n    S[][] a;\n    S[] b;\n\n    constructor() {\n        a.push();\n        a[0].push(S(1));\n        a[0].push(S(2));\n        a[0].push(S(3));\n\n        b.push(S(4));\n        b.push(S(5));\n        b.push(S(6));\n        b.push(S(7));\n    }\n\n    function test1() external returns (bool) {\n        a.push();\n        a[1] = b;\n\n        assert(a.length == 2);\n        assert(a[0].length == 3);\n        assert(a[1].length == 4);\n        assert(a[1][0].value == 4);\n        assert(a[1][1].value == 5);\n        assert(a[1][2].value == 6);\n        assert(a[1][3].value == 7);\n\n        return true;\n    }\n\n    function test2() external returns (bool) {\n        S[][] memory temp = new S[][](2);\n\n        temp = a;\n\n        assert(temp.length == 2);\n        assert(temp[0].length == 3);\n        assert(temp[1].length == 4);\n        assert(temp[1][0].value == 4);\n        assert(temp[1][1].value == 5);\n        assert(temp[1][2].value == 6);\n        assert(temp[1][3].value == 7);\n\n        return true;\n    }\n\n    function test3() external returns (bool) {\n        S[][] memory temp = new S[][](2);\n\n        temp[0] = a[0];\n        temp[1] = a[1];\n\n        assert(temp.length == 2);\n        assert(temp[0].length == 3);\n        assert(temp[1].length == 4);\n        assert(temp[1][0].value == 4);\n        assert(temp[1][1].value == 5);\n        assert(temp[1][2].value == 6);\n        assert(temp[1][3].value == 7);\n\n        return true;\n    }\n\n    function test4() external returns (bool) {\n        S[][] memory temp = new S[][](2);\n\n        temp[0] = a[0];\n        temp[1] = b;\n\n        assert(temp.length == 2);\n        assert(temp[0].length == 3);\n        assert(temp[1].length == 4);\n        assert(temp[1][0].value == 4);\n        assert(temp[1][1].value == 5);\n        assert(temp[1][2].value == 6);\n        assert(temp[1][3].value == 7);\n\n        return true;\n    }\n}\n// ====\n// EVMVersion: >homestead\n// ----\n// test1() -> true\n// gas irOptimized: 152965\n// gas legacy: 153010\n// gas legacyOptimized: 152636\n// test2() -> true\n// test3() -> true\n// test4() -> true\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}