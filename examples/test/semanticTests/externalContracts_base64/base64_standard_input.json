{"language": "Solidity", "sources": {"base64.sol": {"content": "import \"_base64/base64_inline_asm.sol\";\nimport \"_base64/base64_no_inline_asm.sol\";\n\ncontract test {\n    function encode_inline_asm(bytes memory data) external pure returns (string memory) {\n      return InlineAsmBase64.encode(data);\n    }\n\n    function encode_no_asm(bytes memory data) external pure returns (string memory) {\n      return NoAsmBase64.encode(data);\n    }\n\n    function encode_inline_asm_large() external {\n      for (uint i = 0; i < 1000; i++) {\n        InlineAsmBase64.encode(\"foo\");\n      }\n    }\n\n    function encode_no_asm_large() external {\n      for (uint i = 0; i < 1000; i++) {\n        NoAsmBase64.encode(\"foo\");\n      }\n    }\n}\n// Test cases derived from Base64 specification: RFC4648\n// https://datatracker.ietf.org/doc/html/rfc4648#section-10\n//\n// ====\n// EVMVersion: >=constantinople\n// ----\n// constructor()\n// gas irOptimized: 79076\n// gas irOptimized code: 322000\n// gas legacy: 102214\n// gas legacy code: 629800\n// gas legacyOptimized: 87926\n// gas legacyOptimized code: 429800\n// encode_inline_asm(bytes): 0x20, 0 -> 0x20, 0\n// encode_inline_asm(bytes): 0x20, 1, \"f\" -> 0x20, 4, \"Zg==\"\n// encode_inline_asm(bytes): 0x20, 2, \"fo\" -> 0x20, 4, \"Zm8=\"\n// encode_inline_asm(bytes): 0x20, 3, \"foo\" -> 0x20, 4, \"Zm9v\"\n// encode_inline_asm(bytes): 0x20, 4, \"foob\" -> 0x20, 8, \"Zm9vYg==\"\n// encode_inline_asm(bytes): 0x20, 5, \"fooba\" -> 0x20, 8, \"Zm9vYmE=\"\n// encode_inline_asm(bytes): 0x20, 6, \"foobar\" -> 0x20, 8, \"Zm9vYmFy\"\n// encode_no_asm(bytes): 0x20, 0 -> 0x20, 0\n// encode_no_asm(bytes): 0x20, 1, \"f\" -> 0x20, 4, \"Zg==\"\n// encode_no_asm(bytes): 0x20, 2, \"fo\" -> 0x20, 4, \"Zm8=\"\n// encode_no_asm(bytes): 0x20, 3, \"foo\" -> 0x20, 4, \"Zm9v\"\n// encode_no_asm(bytes): 0x20, 4, \"foob\" -> 0x20, 8, \"Zm9vYg==\"\n// encode_no_asm(bytes): 0x20, 5, \"fooba\" -> 0x20, 8, \"Zm9vYmE=\"\n// encode_no_asm(bytes): 0x20, 6, \"foobar\" -> 0x20, 8, \"Zm9vYmFy\"\n// encode_inline_asm_large()\n// gas irOptimized: 1406025\n// gas legacy: 1554038\n// gas legacyOptimized: 1132031\n// encode_no_asm_large()\n// gas irOptimized: 3512081\n// gas legacy: 4600082\n// gas legacyOptimized: 2813075"}}, "settings": {"optimizer": {"enabled": true, "runs": 200}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}, "viaIR": true}}