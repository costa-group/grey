{"language": "Solidity", "sources": {"array_copy_cleanup_uint40.sol": {"content": "// Issue 9832: Test to see if cleanup is performed properly after array copying\ncontract C {\n    uint40[] x;\n    function f() public returns(bool) {\n\n        x.push(42); x.push(42); x.push(42); x.push(42);\n        x.push(42); x.push(42); x.push(42); x.push(42);\n        x.push(42); x.push(42); x.push(42); x.push(42);\n        x.push(42); x.push(42); x.push(42); x.push(42);\n        x.push(42); x.push(42); x.push(42); x.push(42);\n\n        uint40[] memory y = new uint40[](1);\n        y[0] = 23;\n        x = y;\n\n        assembly { sstore(x.slot, 20) }\n\n        assert(x[0] == 23);\n        assert(x[1] == 0);\n        assert(x[2] == 0);\n        assert(x[3] == 0);\n\n        assert(x[4] == 0);\n        assert(x[5] == 0);\n        assert(x[6] == 0);\n        assert(x[7] == 0);\n\n        assert(x[8] == 0);\n        assert(x[9] == 0);\n        assert(x[10] == 0);\n        assert(x[11] == 0);\n\n        assert(x[12] == 0);\n        assert(x[13] == 0);\n        assert(x[14] == 0);\n        assert(x[15] == 0);\n\n        assert(x[16] == 0);\n        assert(x[17] == 0);\n        assert(x[18] == 0);\n        assert(x[19] == 0);\n\n        return true;\n\n    }\n}\n// ----\n// f() -> true\n// gas irOptimized: 122541\n// gas legacy: 124643\n// gas legacyOptimized: 122801\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}, "viaIR": true}}