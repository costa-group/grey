{
    "language": "Solidity",
    "sources": {
        "dirty_memory_bytes_to_storage_copy.sol": {
            "content": "contract C {\n    bytes x;\n    function f() public returns (uint r) {\n        bytes memory m = \"tmp\";\n        assembly {\n            mstore(m, 8)\n            mstore(add(m, 32), \"deadbeef15dead\")\n        }\n        // via yul disabled because this truncates the string.\n        x = m;\n        assembly {\n            r := sload(x.slot)\n        }\n    }\n}\n// ====\n// compileViaYul: false\n// ----\n// f() -> 0x6465616462656566000000000000000000000000000000000000000000000010\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}