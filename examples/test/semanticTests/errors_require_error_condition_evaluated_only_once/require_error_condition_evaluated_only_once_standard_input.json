{
    "language": "Solidity",
    "sources": {
        "require_error_condition_evaluated_only_once.sol": {
            "content": "contract C {\n    uint256 counter = 0;\n\n    error CustomError(uint256);\n\n    function getCounter() public view returns (uint256) {\n        return counter;\n    }\n\n    function g(bool condition) internal returns (bool) {\n        counter++;\n        return condition;\n    }\n\n    function f(bool condition) external {\n        require(g(condition), CustomError(counter));\n    }\n}\n\n// ----\n// f(bool): false -> FAILURE, hex\"110b3655\", 1\n// getCounter() -> 0\n// f(bool): true ->\n// getCounter() -> 1\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}