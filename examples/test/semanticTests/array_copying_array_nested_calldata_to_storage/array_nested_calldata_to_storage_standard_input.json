{"language": "Solidity", "sources": {"array_nested_calldata_to_storage.sol": {"content": "pragma abicoder               v2;\n\ncontract c {\n    uint256[][] a1;\n    uint256[][2] a2;\n    uint256[2][] a3;\n    uint256[2][2] a4;\n\n    function test1(uint256[][] calldata c) external returns (uint256, uint256) {\n        a1 = c;\n        assert(a1[0][0] == c[0][0]);\n        assert(a1[0][1] == c[0][1]);\n        return (a1.length, a1[0][0] + a1[1][1]);\n    }\n\n    function test2(uint256[][2] calldata c) external returns (uint256, uint256) {\n        a2 = c;\n        assert(a2[0][0] == c[0][0]);\n        assert(a2[0][1] == c[0][1]);\n        return (a2[0].length, a2[0][0] + a2[1][1]);\n    }\n\n    function test3(uint256[2][] calldata c) external returns (uint256, uint256) {\n        a3 = c;\n        assert(a3[0][0] == c[0][0]);\n        assert(a3[0][1] == c[0][1]);\n        return (a3.length, a3[0][0] + a3[1][1]);\n    }\n\n    function test4(uint256[2][2] calldata c) external returns (uint256) {\n        a4 = c;\n        assert(a4[0][0] == c[0][0]);\n        assert(a4[0][1] == c[0][1]);\n        return (a4[0][0] + a4[1][1]);\n    }\n}\n// ====\n// compileViaYul: true\n// ----\n// test1(uint256[][]): 0x20, 2, 0x40, 0x40, 2, 23, 42 -> 2, 65\n// gas irOptimized: 181029\n// test2(uint256[][2]): 0x20, 0x40, 0x40, 2, 23, 42 -> 2, 65\n// gas irOptimized: 157604\n// test3(uint256[2][]): 0x20, 2, 23, 42, 23, 42 -> 2, 65\n// gas irOptimized: 134801\n// test4(uint256[2][2]): 23, 42, 23, 42 -> 65\n// gas irOptimized: 111177\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}, "viaIR": true}}