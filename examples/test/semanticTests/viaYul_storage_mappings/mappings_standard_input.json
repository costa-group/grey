{"language": "Solidity", "sources": {"mappings.sol": {"content": "contract C {\n    mapping(uint => uint) simple;\n    mapping(uint16 => uint) cleanup;\n    mapping(string => uint) str;\n    mapping(uint => mapping(uint => uint)) twodim;\n    function test_simple(uint _off) public returns (uint _a, uint _b, uint _c) {\n        simple[_off + 2] = 3;\n        simple[_off + 3] = 4;\n        simple[type(uint256).max] = 5;\n        _c = simple[type(uint256).max];\n        _b = simple[3 + _off];\n        _a = simple[2 + _off];\n    }\n    function test_cleanup() public returns (bool) {\n        uint16 x;\n        assembly { x := 0xffff0001 }\n        cleanup[x] = 3;\n        return cleanup[1] == 3;\n    }\n    function test_str() public returns (bool) {\n        str[\"abc\"] = 3;\n        string memory s = \"abc\";\n        return str[s] == 3;\n    }\n    function test_twodim() public returns (uint a, uint b) {\n        twodim[2][3] = 3;\n        a = twodim[3][2];\n        b = twodim[2][3];\n    }\n}\n// ----\n// test_simple(uint256): 0 -> 3, 4, 5\n// test_simple(uint256): 1 -> 3, 4, 5\n// test_simple(uint256): 2 -> 3, 4, 5\n// test_cleanup() -> true\n// test_str() -> true\n// test_twodim() -> 0, 3\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}, "viaIR": true}}