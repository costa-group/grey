{
    "language": "Solidity",
    "sources": {
        "access_base_storage.sol": {
            "content": "contract Base {\n    uint256 dataBase;\n\n    function getViaBase() public returns (uint256 i) {\n        return dataBase;\n    }\n}\n\n\ncontract Derived is Base {\n    uint256 dataDerived;\n\n    function setData(uint256 base, uint256 derived) public returns (bool r) {\n        dataBase = base;\n        dataDerived = derived;\n        return true;\n    }\n\n    function getViaDerived() public returns (uint256 base, uint256 derived) {\n        base = dataBase;\n        derived = dataDerived;\n    }\n}\n// ----\n// setData(uint256,uint256): 1, 2 -> true\n// getViaBase() -> 1\n// getViaDerived() -> 1, 2\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}