{"language": "Solidity", "sources": {"internal_library_function_return_var_size.sol": {"content": "// This has to work without linking, because everything will be inlined.\nlibrary L {\n    struct S {\n        uint256[] data;\n    }\n\n    function f(S memory _s) internal returns (uint256[] memory) {\n        _s.data[3] = 2;\n        return _s.data;\n    }\n}\n\n\ncontract C {\n    using L for L.S;\n\n    function f() public returns (uint256) {\n        L.S memory x;\n        x.data = new uint256[](7);\n        x.data[3] = 8;\n        return x.f()[3];\n    }\n}\n// ----\n// f() -> 2\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}, "viaIR": true}}