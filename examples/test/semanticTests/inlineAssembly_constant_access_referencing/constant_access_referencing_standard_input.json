{
    "language": "Solidity",
    "sources": {
        "constant_access_referencing.sol": {
            "content": "contract C {\n    uint constant a = 2;\n    uint constant aa = a;\n    uint constant aaa = aa;\n    bytes2 constant b = 0xabcd;\n    bytes2 constant bb = b;\n    bytes3 constant c = \"abc\";\n    bytes3 constant cc = c;\n    bytes3 constant ccc = cc;\n    bytes3 constant cccc = ccc;\n    bool constant d = true;\n    bool constant dd = d;\n    address constant e = 0x1212121212121212121212121212121212121212;\n    address constant ee = e;\n    function f() public pure returns (uint w, bytes2 x, bytes3 y, bool z, address t) {\n        assembly {\n            w := aaa\n            x := bb\n            y := cccc\n            z := dd\n            t := ee\n        }\n    }\n}\n// ----\n// f() -> 2, left(0xabcd), left(0x616263), true, 0x1212121212121212121212121212121212121212\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}