{
    "language": "Solidity",
    "sources": {
        "if.sol": {
            "content": "contract C {\n    function f(bool condition) public returns (uint x) {\n        x = 23;\n        if (condition)\n            x = 42;\n    }\n    function g(bool condition) public returns (uint x) {\n        x = 0;\n        if (condition)\n            x = 42;\n        else\n            x = 23;\n    }\n    function h(bool condition) public returns (uint x) {\n        if (condition)\n            return 42;\n        x = 23;\n    }\n    function i(bool condition) public returns (uint x) {\n        if (condition)\n            x = 10;\n        else\n            return 23;\n        x = 42;\n    }\n    function j(uint a, uint b) public returns (uint x, uint y) {\n        x = 42;\n        if (a + b < 10)\n            x = a;\n        else\n            x = b;\n        y = 100;\n    }\n    function k(uint a, uint b) public returns (uint x, uint y) {\n        x = 42;\n        do {\n            if (a + b < 10)\n            {\n                if (a == b)\n                {\n                    x = 99; y = 99;\n                    break;\n                }\n                else\n                {\n                    x = a;\n                }\n            }\n            else\n            {\n                x = b;\n                if (a != b)\n                    y = 17;\n                else\n                    y = 13;\n                break;\n            }\n            y = 100;\n        } while(false);\n    }\n}\n// ----\n// f(bool): 0 -> 23\n// f(bool): 1 -> 42\n// g(bool): 0 -> 23\n// g(bool): 1 -> 42\n// h(bool): 0 -> 23\n// h(bool): 1 -> 42\n// i(bool): 0 -> 23\n// i(bool): 1 -> 42\n// j(uint256,uint256): 1, 3 -> 1, 100\n// j(uint256,uint256): 3, 1 -> 3, 100\n// j(uint256,uint256): 10, 23 -> 23, 100\n// j(uint256,uint256): 23, 10 -> 10, 100\n// k(uint256,uint256): 1, 3 -> 1, 100\n// k(uint256,uint256): 3, 1 -> 3, 100\n// k(uint256,uint256): 3, 3 -> 99, 99\n// k(uint256,uint256): 10, 23 -> 23, 17\n// k(uint256,uint256): 23, 10 -> 10, 17\n// k(uint256,uint256): 23, 23 -> 23, 13\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}