{
    "language": "Solidity",
    "sources": {
        "calldata_1d_array_into_2d_memory_array_element.sol": {
            "content": "// Example from https://github.com/ethereum/solidity/issues/12558\npragma abicoder v2;\ncontract C {\n    function f(uint[] calldata a) external returns (uint[][] memory) {\n        uint[][] memory m = new uint[][](2);\n        m[0] = a;\n\n        return m;\n    }\n}\ncontract Test {\n    C immutable c = new C();\n\n    function test() external returns (bool) {\n        uint[] memory arr = new uint[](4);\n\n        arr[0] = 13;\n        arr[1] = 14;\n        arr[2] = 15;\n        arr[3] = 16;\n\n        uint[][] memory ret = c.f(arr);\n        assert(ret.length == 2);\n        assert(ret[0].length == 4);\n        assert(ret[0][0] == 13);\n        assert(ret[0][1] == 14);\n        assert(ret[0][2] == 15);\n        assert(ret[0][3] == 16);\n        assert(ret[1].length == 0);\n\n        return true;\n    }\n}\n// ====\n// EVMVersion: >homestead\n// ----\n// test() -> true\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}