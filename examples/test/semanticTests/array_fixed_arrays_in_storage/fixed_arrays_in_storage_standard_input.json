{
    "language": "Solidity",
    "sources": {
        "fixed_arrays_in_storage.sol": {
            "content": "contract c {\n    struct Data {\n        uint256 x;\n        uint256 y;\n    }\n    Data[2**10] data;\n    uint256[2**10 + 3] ids;\n\n    function setIDStatic(uint256 id) public {\n        ids[2] = id;\n    }\n\n    function setID(uint256 index, uint256 id) public {\n        ids[index] = id;\n    }\n\n    function setData(uint256 index, uint256 x, uint256 y) public {\n        data[index].x = x;\n        data[index].y = y;\n    }\n\n    function getID(uint256 index) public returns (uint256) {\n        return ids[index];\n    }\n\n    function getData(uint256 index) public returns (uint256 x, uint256 y) {\n        x = data[index].x;\n        y = data[index].y;\n    }\n\n    function getLengths() public returns (uint256 l1, uint256 l2) {\n        l1 = data.length;\n        l2 = ids.length;\n    }\n}\n// ----\n// setIDStatic(uint256): 0xb ->\n// getID(uint256): 0x2 -> 0xb\n// setID(uint256,uint256): 0x7, 0x8 ->\n// getID(uint256): 0x7 -> 0x8\n// setData(uint256,uint256,uint256): 0x7, 0x8, 0x9 ->\n// setData(uint256,uint256,uint256): 0x8, 0xa, 0xb ->\n// getData(uint256): 0x7 -> 0x8, 0x9\n// getData(uint256): 0x8 -> 0xa, 0xb\n// getLengths() -> 0x400, 0x403\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}