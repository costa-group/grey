{"language": "Solidity", "sources": {"nested_array_element_storage_to_storage.sol": {"content": "pragma abicoder v2;\n\ncontract C {\n    uint8[][][] src1 = new uint8[][][](2);\n    uint8[][][2] src2;\n    uint8[][2][] src3 = new uint8[][2][](1);\n    uint8[2][][] src4 = new uint8[2][][](2);\n\n    uint8[][] dst1;\n    uint8[][] dst2;\n    uint8[][2] dst3;\n    uint8[][] dst4;\n\n    constructor() {\n        src1[1] = new uint8[][](2);\n        src1[1][0] = [3, 4];\n        src1[1][1] = [5, 6];\n\n        src2[0] = new uint8[][](2);\n        src2[0][0] = [6, 7];\n        src2[0][1] = [8, 9];\n        src2[1] = new uint8[][](2);\n        src2[1][0] = [10, 11];\n\n        src3[0][0] = [3, 4];\n        src3[0][1] = [5, 6];\n\n        src4[0] = new uint8[2][](1);\n        src4[0][0] = [17, 23];\n        src4[1] = new uint8[2][](1);\n        src4[1][0] = [19, 31];\n    }\n\n    function test1() public {\n        dst1 = src1[1];\n\n        require(dst1.length == 2);\n        require(dst1[0][0] == src1[1][0][0]);\n        require(dst1[0][1] == src1[1][0][1]);\n        require(dst1[1][0] == src1[1][1][0]);\n        require(dst1[1][1] == src1[1][1][1]);\n    }\n\n    function test2() public {\n        dst2 = src2[0];\n\n        require(dst2.length == 2);\n        require(dst2[0][0] == src2[1][0][0]);\n        require(dst2[0][1] == src2[1][0][1]);\n        require(dst2[1][0] == src2[1][1][0]);\n        require(dst2[1][1] == src2[1][1][1]);\n    }\n\n    function test3() public {\n        dst3 = src3[0];\n        require(dst3[0][0] == src3[0][0][0]);\n        require(dst3[0][1] == src3[0][0][1]);\n        require(dst3[1][0] == src3[0][1][0]);\n        require(dst3[1][1] == src3[0][1][1]);\n    }\n\n    function test4() public {\n        dst4 = src4[1];\n        require(dst4.length == 2);\n        require(dst4[0][0] == src4[0][0][0]);\n        require(dst4[0][1] == src4[0][0][1]);\n        require(dst4[1][0] == src4[0][1][0]);\n        require(dst4[1][1] == src4[0][1][1]);\n    }\n}\n// ----\n// test1() ->\n// gas irOptimized: 150488\n// gas legacy: 150949\n// gas legacyOptimized: 150906\n// test2() -> FAILURE\n// gas irOptimized: 150389\n// gas legacy: 150672\n// gas legacyOptimized: 150575\n// test3() ->\n// gas irOptimized: 124300\n// gas legacy: 125333\n// gas legacyOptimized: 125127\n// test4() -> FAILURE\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}, "viaIR": true}}