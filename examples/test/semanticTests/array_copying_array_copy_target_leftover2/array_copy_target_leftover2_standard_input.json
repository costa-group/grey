{"language": "Solidity", "sources": {"array_copy_target_leftover2.sol": {"content": "// since the copy always copies whole slots, we have to make sure that the source size maxes\n// out a whole slot and at the same time there are still elements left in the target at that point\ncontract c {\n    bytes8[4] data1; // fits into one slot\n    bytes10[6] data2; // 4 elements need two slots\n\n    function test() public returns (bytes10 r1, bytes10 r2, bytes10 r3) {\n        data1[0] = bytes8(uint64(1));\n        data1[1] = bytes8(uint64(2));\n        data1[2] = bytes8(uint64(3));\n        data1[3] = bytes8(uint64(4));\n        for (uint256 i = 0; i < data2.length; ++i)\n            data2[i] = bytes10(uint80(0xffff00 | (1 + i)));\n        data2 = data1;\n        r1 = data2[3];\n        r2 = data2[4];\n        r3 = data2[5];\n    }\n}\n// ----\n// test() -> 0x04000000000000000000000000000000000000000000000000, 0x0, 0x0\n// gas irOptimized: 93858\n// gas legacy: 97451\n// gas legacyOptimized: 94200\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}