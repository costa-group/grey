{"language": "Solidity", "sources": {"create_multiple_dynamic_arrays.sol": {"content": "contract C {\n    function f() public returns (uint256) {\n        uint256[][] memory x = new uint256[][](42);\n        assert(x[0].length == 0);\n        x[0] = new uint256[](1);\n        x[0][0] = 1;\n        assert(x[4].length == 0);\n        x[4] = new uint256[](1);\n        x[4][0] = 2;\n        assert(x[10].length == 0);\n        x[10] = new uint256[](1);\n        x[10][0] = 44;\n        uint256[][] memory y = new uint256[][](24);\n        assert(y[0].length == 0);\n        y[0] = new uint256[](1);\n        y[0][0] = 1;\n        assert(y[4].length == 0);\n        y[4] = new uint256[](1);\n        y[4][0] = 2;\n        assert(y[10].length == 0);\n        y[10] = new uint256[](1);\n        y[10][0] = 88;\n        if (\n            (x[0][0] == y[0][0]) &&\n            (x[4][0] == y[4][0]) &&\n            (x[10][0] == 44) &&\n            (y[10][0] == 88)\n        ) return 7;\n        return 0;\n    }\n}\n// ----\n// f() -> 7\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}, "viaIR": true}}