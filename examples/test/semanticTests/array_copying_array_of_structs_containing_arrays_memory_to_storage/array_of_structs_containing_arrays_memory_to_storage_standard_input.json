{"language": "Solidity", "sources": {"array_of_structs_containing_arrays_memory_to_storage.sol": {"content": "pragma abicoder               v2;\n\ncontract C {\n    struct S {\n        uint136 p;\n        uint128[3] b;\n        uint128[] c;\n    }\n\n    S[] s;\n\n    function f() external returns (uint256, uint256, uint128, uint128) {\n        S[] memory m = new S[](3);\n        m[1] = S(0, [uint128(1), 2, 3], new uint128[](3));\n        m[1].c[0] = 1;\n        m[1].c[1] = 2;\n        m[1].c[2] = 3;\n        s = m;\n        assert(s.length == m.length);\n        assert(s[1].b[1] == m[1].b[1]);\n        assert(s[1].c[0] == m[1].c[0]);\n        return (s[1].b.length, s[1].c.length, s[1].b[2], s[1].c[0]);\n    }\n}\n// ====\n// compileViaYul: true\n// ----\n// f() -> 3, 3, 3, 1\n// gas irOptimized: 181928\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}