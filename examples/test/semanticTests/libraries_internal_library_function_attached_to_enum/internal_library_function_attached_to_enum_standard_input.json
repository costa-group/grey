{
    "language": "Solidity",
    "sources": {
        "internal_library_function_attached_to_enum.sol": {
            "content": "library L {\n    enum E { A, B }\n\n    function equals(E a, E b) internal pure returns (bool) {\n        return a == b;\n    }\n}\n\ncontract C {\n    using L for L.E;\n\n    function equalsA(uint choice) public returns (bool) {\n        L.E x = L.E.A;\n        return x.equals(L.E(choice));\n    }\n}\n// ----\n// equalsA(uint256): 0 -> true\n// equalsA(uint256): 1 -> false\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}