{
    "language": "Solidity",
    "sources": {
        "library_functions_inside_contract.sol": {
            "content": "library L {\n    function externalFunction(uint a) external pure returns (uint) { return a * 1; }\n    function publicFunction(uint b) public pure returns (uint) { return b * 2; }\n    function internalFunction(uint c) internal pure returns (uint) { return c * 3; }\n}\n\ncontract C {\n    using {L.externalFunction} for uint;\n    using {L.publicFunction} for uint;\n    using {L.internalFunction} for uint;\n\n    function f() public pure returns (uint) {\n        uint x = 1;\n        return x.externalFunction();\n    }\n\n    function g() public pure returns (uint) {\n        uint x = 1;\n        return x.publicFunction();\n    }\n\n    function h() public pure returns (uint) {\n        uint x = 1;\n        return x.internalFunction();\n    }\n}\n// ----\n// library: L\n// f() -> 1\n// g() -> 2\n// h() -> 3\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}