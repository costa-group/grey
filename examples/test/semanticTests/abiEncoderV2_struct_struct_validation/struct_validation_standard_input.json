{
    "language": "Solidity",
    "sources": {
        "struct_validation.sol": {
            "content": "pragma abicoder               v2;\n\ncontract C {\n\tstruct S { int16 a; uint8 b; bytes2 c; }\n\tfunction f(S memory s) public pure returns (uint a, uint b, uint c) {\n\t\tassembly {\n\t\t\ta := mload(s)\n\t\t\tb := mload(add(s, 0x20))\n\t\t\tc := mload(add(s, 0x40))\n\t\t}\n\t}\n}\n// ----\n// f((int16,uint8,bytes2)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01, 0xff, \"ab\" -> 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01, 0xff, \"ab\"\n// f((int16,uint8,bytes2)): 0xff010, 0xff, \"ab\" -> FAILURE\n// f((int16,uint8,bytes2)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01, 0xff0002, \"ab\" -> FAILURE\n// f((int16,uint8,bytes2)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01, 0xff, \"abcd\" -> FAILURE\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}