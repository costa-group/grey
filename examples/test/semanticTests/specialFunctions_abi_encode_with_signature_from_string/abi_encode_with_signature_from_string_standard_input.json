{"language": "Solidity", "sources": {"abi_encode_with_signature_from_string.sol": {"content": "contract C {\n    function f() public pure returns (bytes memory r1, bytes memory r2) {\n        string memory x = \"my_signature\";\n        r1 = abi.encodeWithSignature(\"my_signature\", 1);\n        r2 = abi.encodeWithSignature(x, 1);\n        assert(r1.length == r2.length);\n        for (uint i = 0; i < r1.length; i++)\n            assert(r1[i] == r2[i]);\n    }\n}\n// ----\n// f() -> 0x40, 0xa0, 0x24, -813742827273327954027712588510533233455028711326166692885570228492575965184, 26959946667150639794667015087019630673637144422540572481103610249216, 0x24, -813742827273327954027712588510533233455028711326166692885570228492575965184, 26959946667150639794667015087019630673637144422540572481103610249216\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}