{
    "language": "Solidity",
    "sources": {
        "string_concat_empty_strings.sol": {
            "content": "contract C {\n    function f() public returns (string memory) {\n        string memory b = \"\";\n        return string.concat(\n            string.concat(b),\n            string.concat(b, b),\n            string.concat(\"\", b),\n            string.concat(b, \"\")\n        );\n    }\n\n    function g() public returns (string memory) {\n        return string.concat(\"\", \"abc\", hex\"\", \"abc\", unicode\"\");\n    }\n\n    function h() public returns (string memory) {\n        string memory b = \"\";\n        return string.concat(b, \"abc\", b, \"abc\", b);\n    }\n}\n// ----\n// f() -> 0x20, 0\n// g() -> 0x20, 6, \"abcabc\"\n// h() -> 0x20, 6, \"abcabc\"\n"
        },
        "string_concat_nested.sol": {
            "content": "contract C {\n    function f(string memory a, string memory b, string memory c) public returns (string memory) {\n        return string.concat(string.concat(a, b), c);\n    }\n}\n// ----\n// f(string,string,string): 0x60, 0x60, 0x60, 2, \"ab\" -> 0x20, 6, \"ababab\"\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}