{
    "language": "Solidity",
    "sources": {
        "call_base_base.sol": {
            "content": "contract BaseBase {\n\tfunction f(uint n) public virtual returns (uint) {\n\t\treturn 2 * n;\n\t}\n\tfunction s(uint n) public returns (uint) {\n\t\treturn 4 * n;\n\t}\n}\n\ncontract Base is BaseBase {\n\tfunction f(uint n) public virtual override returns (uint) {\n\t\treturn 3 * n;\n\t}\n}\n\ncontract Child is Base {\n\tfunction g(uint n) public returns (uint) {\n\t\treturn f(n);\n\t}\n\n\tfunction h(uint n) public returns (uint) {\n\t\treturn s(n);\n\t}\n}\n// ----\n// g(uint256): 4 -> 12\n// h(uint256): 4 -> 16\n"
        },
        "super_skip_unimplemented_in_abstract_contract.sol": {
            "content": "contract A {\n    function f() public virtual returns (uint) {\n        return 42;\n    }\n}\n\nabstract contract I {\n    function f() external virtual returns (uint);\n}\n\ncontract B is A, I {\n    function f() override(A, I) public returns (uint) {\n        // I.f() is before A.f() in the C3 linearized order\n        // but it has no implementation.\n        return super.f();\n    }\n}\n// ----\n// f() -> 42\n"
        },
        "call_base.sol": {
            "content": "contract Base {\n\tfunction f(uint n) public returns (uint) {\n\t\treturn 2 * n;\n\t}\n}\n\ncontract Child is Base {\n\tfunction g(uint n) public returns (uint) {\n\t\treturn f(n);\n\t}\n}\n// ----\n// g(uint256): 4 -> 8\n"
        },
        "base_overload.sol": {
            "content": "contract Base {\n\tuint public x;\n\tuint public y;\n\tfunction init(uint a, uint b) public {\n\t\tx = a;\n\t\ty = b;\n\t}\n\tfunction init(uint a) public {\n\t\tx = a;\n\t}\n}\n\ncontract Child is Base {\n\tfunction cInit(uint c) public {\n\t\tBase.init(c);\n\t}\n\tfunction cInit(uint c, uint d) public {\n\t\tBase.init(c, d);\n\t}\n}\n// ----\n// x() -> 0\n// y() -> 0\n// cInit(uint256): 2 ->\n// x() -> 2\n// y() -> 0\n// cInit(uint256,uint256): 3, 3 ->\n// x() -> 3\n// y() -> 3\n"
        },
        "super_skip_unimplemented_in_interface.sol": {
            "content": "contract A {\n    function f() public virtual returns (uint) {\n        return 42;\n    }\n}\n\ninterface I {\n    function f() external returns (uint);\n}\n\ncontract B is A, I {\n    function f() override(A, I) public returns (uint) {\n        // I.f() is before A.f() in the C3 linearized order\n        // but it has no implementation.\n        return super.f();\n    }\n}\n// ----\n// f() -> 42\n"
        },
        "call_base_base_explicit.sol": {
            "content": "contract BaseBase {\n\tfunction f(uint n) public virtual returns (uint) {\n\t\treturn 2 * n;\n\t}\n\n\tfunction s(uint n) public returns (uint) {\n\t\treturn 4 * n;\n\t}\n}\n\ncontract Base is BaseBase {\n\tfunction f(uint n) public virtual override returns (uint) {\n\t\treturn 3 * n;\n\t}\n}\n\ncontract Child is Base {\n\tfunction g(uint n) public returns (uint) {\n\t\t// calling base-bse function of a virtual overridden function.\n\t\treturn BaseBase.f(n);\n\t}\n\n\tfunction k(uint n) public returns (uint) {\n\t\t// Calling base-base function of a non-virtual function.\n\t\treturn BaseBase.s(n);\n\t}\n}\n// ----\n// g(uint256): 4 -> 8\n// k(uint256): 4 -> 16\n"
        },
        "call_base_explicit.sol": {
            "content": "contract Base {\n\tfunction f(uint n) public returns (uint) {\n\t\treturn 2 * n;\n\t}\n}\n\ncontract Child is Base {\n\tfunction g(uint n) public returns (uint) {\n\t\treturn Base.f(n);\n\t}\n}\n// ----\n// g(uint256): 4 -> 8\n"
        },
        "call_unimplemented_base.sol": {
            "content": "abstract contract I\n{\n    function a() internal view virtual returns(uint256);\n}\nabstract contract J is I\n{\n    function a() internal view virtual override returns(uint256);\n}\nabstract contract V is J\n{\n    function b() public view returns(uint256) { return a(); }\n}\ncontract C is V\n{\n    function a() internal view override returns (uint256) { return 42; }\n}\n// ----\n// b() -> 42\n"
        },
        "base_base_overload.sol": {
            "content": "contract BaseBase {\n\tuint public x;\n\tuint public y;\n\tfunction init(uint a, uint b) public virtual {\n\t\tx = b;\n\t\ty = a;\n\t}\n\tfunction init(uint a) public virtual {\n\t\tx = a + 1;\n\t}\n}\n\ncontract Base is BaseBase {\n\tfunction init(uint a, uint b) public override {\n\t\tx = a;\n\t\ty = b;\n\t}\n\tfunction init(uint a) public override {\n\t\tx = a;\n\t}\n}\n\ncontract Child is Base {\n\tfunction cInit(uint c) public {\n\t\tBase.init(c);\n\t}\n\tfunction cInit(uint c, uint d) public {\n\t\tBase.init(c, d);\n\t}\n\tfunction bInit(uint c) public {\n\t\tBaseBase.init(c);\n\t}\n\tfunction bInit(uint c, uint d) public {\n\t\tBaseBase.init(c, d);\n\t}\n}\n// ----\n// x() -> 0\n// y() -> 0\n// cInit(uint256): 2 ->\n// x() -> 2\n// y() -> 0\n// cInit(uint256,uint256): 3, 3 ->\n// x() -> 3\n// y() -> 3\n// bInit(uint256): 4 ->\n// x() -> 5\n// bInit(uint256,uint256): 9, 10 ->\n// x() -> 10\n// y() -> 9\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}