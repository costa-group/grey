{
    "language": "Solidity",
    "sources": {
        "unchecked_called_by_checked.sol": {
            "content": "contract C {\n    function add(uint16 a, uint16 b) public returns (uint16) {\n        unchecked {\n            return a + b;\n        }\n    }\n\n    function f(uint16 a) public returns (uint16) {\n        return add(a, 0x100) + 0x100;\n    }\n}\n// ----\n// f(uint16): 7 -> 0x0207\n// f(uint16): 0xffff -> 511\n// f(uint16): 0xfeff -> FAILURE, hex\"4e487b71\", 0x11\n"
        },
        "addmod_mulmod.sol": {
            "content": "contract C {\n    function test() public returns (uint256) {\n        // Note that this only works because computation on literals is done using\n        // unbounded integers.\n        if ((2**255 + 2**255) % 7 != addmod(2**255, 2**255, 7)) return 1;\n        if ((2**255 + 2**255) % 7 != addmod(2**255, 2**255, 7)) return 2;\n        return 0;\n    }\n}\n// ----\n// test() -> 0\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}