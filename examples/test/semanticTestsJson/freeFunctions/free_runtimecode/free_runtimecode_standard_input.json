{
    "language": "Solidity",
    "sources": {
        "import.sol": {
            "content": "==== Source: A ====\nstruct S { uint x; }\nfunction set(S storage a, uint v) { a.x = v; }\n\n==== Source: B ====\nimport \"A\";\nimport \"A\" as A;\ncontract C {\n  A.S data;\n  function f(uint v) public returns (uint one, uint two) {\n    A.set(data, v);\n    one = data.x;\n    set(data, v + 1);\n    two = data.x;\n  }\n}\n// ----\n// f(uint256): 7 -> 7, 8\n"
        },
        "free_runtimecode.sol": {
            "content": "contract C {\n  uint public x = 2;\n}\n\nfunction test() returns (bool) {\n  return type(C).runtimeCode.length > 20;\n}\n\ncontract D {\n  function f() public returns (bool) {\n    return test();\n  }\n}\n// ----\n// f() -> true\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}