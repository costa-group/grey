{
    "language": "Solidity",
    "sources": {
        "explicit_base_class.sol": {
            "content": "contract BaseBase {\n    function g() public virtual returns (uint256 r) {\n        return 1;\n    }\n}\n\n\ncontract Base is BaseBase {\n    function g() public virtual override returns (uint256 r) {\n        return 2;\n    }\n}\n\n\ncontract Derived is Base {\n    function f() public returns (uint256 r) {\n        return BaseBase.g();\n    }\n\n    function g() public override returns (uint256 r) {\n        return 3;\n    }\n}\n// ----\n// g() -> 3\n// f() -> 1\n"
        },
        "member_notation_ctor.sol": {
            "content": "==== Source: A ====\ncontract C {\n\tint private x;\n\tconstructor (int p) public { x = p; }\n\tfunction getX() public returns (int) { return x; }\n}\n==== Source: B ====\nimport \"A\" as M;\n\ncontract D is M.C {\n\tconstructor (int p) M.C(p) public {}\n}\n\ncontract A {\n\tfunction g(int p) public returns (int) {\n\t\tD d = new D(p);\n\t\treturn d.getX();\n\t}\n}\n// ----\n// g(int256): -1 -> -1\n// gas legacy: 77876\n// gas legacy code: 24200\n// g(int256): 10 -> 10\n// gas legacy: 77504\n// gas legacy code: 24200\n"
        },
        "inherited_function_through_dispatch.sol": {
            "content": "contract A {\n    function f() internal virtual returns (uint256) {\n        return 1;\n    }\n}\n\n\ncontract B is A {\n    function f() internal override returns (uint256) {\n        return 2;\n    }\n\n    function g() public returns (uint256) {\n        function() internal returns (uint256) ptr = A.f;\n        return ptr();\n    }\n}\n// ----\n// g() -> 1\n"
        },
        "access_base_storage.sol": {
            "content": "contract Base {\n    uint256 dataBase;\n\n    function getViaBase() public returns (uint256 i) {\n        return dataBase;\n    }\n}\n\n\ncontract Derived is Base {\n    uint256 dataDerived;\n\n    function setData(uint256 base, uint256 derived) public returns (bool r) {\n        dataBase = base;\n        dataDerived = derived;\n        return true;\n    }\n\n    function getViaDerived() public returns (uint256 base, uint256 derived) {\n        base = dataBase;\n        derived = dataDerived;\n    }\n}\n// ----\n// setData(uint256,uint256): 1, 2 -> true\n// getViaBase() -> 1\n// getViaDerived() -> 1, 2\n"
        },
        "derived_overload_base_function_direct.sol": {
            "content": "contract B {\n    function f() public returns (uint256) {\n        return 10;\n    }\n}\n\n\ncontract C is B {\n    function f(uint256 i) public returns (uint256) {\n        return 2 * i;\n    }\n\n    function g() public returns (uint256) {\n        return f(1);\n    }\n}\n// ----\n// g() -> 2\n"
        },
        "address_overload_resolution.sol": {
            "content": "contract C {\n    function balance() public returns (uint256) {\n        return 1;\n    }\n\n    function transfer(uint256 amount) public returns (uint256) {\n        return amount;\n    }\n}\n\n\ncontract D {\n    function f() public returns (uint256) {\n        return (new C()).balance();\n    }\n\n    function g() public returns (uint256) {\n        return (new C()).transfer(5);\n    }\n}\n// ----\n// f() -> 1\n// gas irOptimized: 77051\n// gas legacy: 54480\n// gas legacy code: 57800\n// g() -> 5\n// gas irOptimized: 77106\n// gas legacy: 55016\n// gas legacy code: 57800\n"
        },
        "pass_dynamic_arguments_to_the_base_base_with_gap.sol": {
            "content": "contract Base {\n    constructor(uint256 i) {\n        m_i = i;\n    }\n\n    uint256 public m_i;\n}\n\n\nabstract contract Base1 is Base {\n    constructor(uint256 k) {}\n}\n\n\ncontract Derived is Base, Base1 {\n    constructor(uint256 i) Base(i) Base1(7) {}\n}\n\n\ncontract Final is Derived(4) {}\n\n// ----\n// m_i() -> 4\n"
        },
        "inherited_constant_state_var.sol": {
            "content": "contract A {\n    uint256 constant x = 7;\n}\n\n\ncontract B is A {\n    function f() public returns (uint256) {\n        return A.x;\n    }\n}\n// ----\n// f() -> 7\n"
        },
        "overloaded_function_call_resolve_to_first.sol": {
            "content": "contract test {\n    function f(uint256 k) public returns (uint256 d) {\n        return k;\n    }\n\n    function f(uint256 a, uint256 b) public returns (uint256 d) {\n        return a + b;\n    }\n\n    function g() public returns (uint256 d) {\n        return f(3);\n    }\n}\n// ----\n// g() -> 3\n"
        },
        "super_in_constructor.sol": {
            "content": "contract A {\n    function f() public virtual returns (uint256 r) {\n        return 1;\n    }\n}\n\n\ncontract B is A {\n    function f() public virtual override returns (uint256 r) {\n        return super.f() | 2;\n    }\n}\n\n\ncontract C is A {\n    function f() public virtual override returns (uint256 r) {\n        return super.f() | 4;\n    }\n}\n\n\ncontract D is B, C {\n    uint256 data;\n\n    constructor() {\n        data = super.f() | 8;\n    }\n\n    function f() public override (B, C) returns (uint256 r) {\n        return data;\n    }\n}\n// ----\n// f() -> 15\n"
        },
        "inherited_function_calldata_memory.sol": {
            "content": "contract A {\n    function f(uint256[] calldata a) external virtual returns (uint256) {\n        return a[0];\n    }\n}\n\n\ncontract B is A {\n    function f(uint256[] memory a) public override returns (uint256) {\n        return a[1];\n    }\n\n    function g() public returns (uint256) {\n        uint256[] memory m = new uint256[](2);\n        m[0] = 42;\n        m[1] = 23;\n        return A(this).f(m);\n    }\n}\n// ----\n// g() -> 23\n"
        },
        "inherited_function_calldata_calldata_interface.sol": {
            "content": "interface I {\n    function f(uint256[] calldata a) external returns (uint256);\n}\n\n\ncontract A is I {\n    function f(uint256[] calldata a) external override returns (uint256) {\n        return 42;\n    }\n}\n\n\ncontract B {\n    function f(uint256[] memory a) public returns (uint256) {\n        return a[1];\n    }\n\n    function g() public returns (uint256) {\n        I i = I(new A());\n        return i.f(new uint256[](2));\n    }\n}\n// ----\n// g() -> 42\n// gas irOptimized: 80813\n// gas legacy: 55868\n// gas legacy code: 66600\n"
        },
        "transient_storage_state_variable_abstract_contract.sol": {
            "content": "abstract contract A {\n    uint transient x;\n    int y;\n    function f() public virtual returns (uint, int, uint, int);\n}\n\ncontract C is A {\n    uint w;\n    int transient z;\n\n    function g() public {\n        w += 2;\n        z += 2;\n    }\n\n    function f() public override returns (uint, int, uint, int) {\n        x += 1;\n        y += 1;\n        g();\n        return (x, y, w, z);\n    }\n}\n// ====\n// EVMVersion: >=cancun\n// ----\n// f() -> 1, 1, 2, 2\n"
        },
        "inherited_function.sol": {
            "content": "contract A {\n    function f() internal virtual returns (uint256) {\n        return 1;\n    }\n}\n\n\ncontract B is A {\n    function f() internal override returns (uint256) {\n        return 2;\n    }\n\n    function g() public returns (uint256) {\n        return A.f();\n    }\n}\n// ----\n// g() -> 1\n"
        },
        "pass_dynamic_arguments_to_the_base.sol": {
            "content": "contract Base {\n    constructor(uint256 i) {\n        m_i = i;\n    }\n\n    uint256 public m_i;\n}\n\n\ncontract Derived is Base {\n    constructor(uint256 i) Base(i) {}\n}\n\n\ncontract Final is Derived(4) {}\n\n// ----\n// m_i() -> 4\n"
        },
        "overloaded_function_call_with_if_else.sol": {
            "content": "contract test {\n    function f(uint256 a, uint256 b) public returns (uint256 d) {\n        return a + b;\n    }\n\n    function f(uint256 k) public returns (uint256 d) {\n        return k;\n    }\n\n    function g(bool flag) public returns (uint256 d) {\n        if (flag) return f(3);\n        else return f(3, 7);\n    }\n}\n// ----\n// g(bool): true -> 3\n// g(bool): false -> 10\n"
        },
        "inherited_function_from_a_library.sol": {
            "content": "library A {\n    function f() internal returns (uint256) {\n        return 1;\n    }\n}\n\n\ncontract B {\n    function f() internal returns (uint256) {\n        return 2;\n    }\n\n    function g() public returns (uint256) {\n        return A.f();\n    }\n}\n// ----\n// g() -> 1\n"
        },
        "inherited_function_calldata_memory_interface.sol": {
            "content": "interface I {\n    function f(uint256[] calldata a) external returns (uint256);\n}\n\n\ncontract A is I {\n    function f(uint256[] memory a) public override returns (uint256) {\n        return 42;\n    }\n}\n\n\ncontract B {\n    function f(uint256[] memory a) public returns (uint256) {\n        return a[1];\n    }\n\n    function g() public returns (uint256) {\n        I i = I(new A());\n        return i.f(new uint256[](2));\n    }\n}\n// ----\n// g() -> 42\n// gas irOptimized: 100282\n// gas legacy: 56839\n// gas legacy code: 123600\n// gas legacyOptimized: 55001\n// gas legacyOptimized code: 60600\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}