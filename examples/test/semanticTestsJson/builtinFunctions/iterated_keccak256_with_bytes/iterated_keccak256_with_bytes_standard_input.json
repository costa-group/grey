{
    "language": "Solidity",
    "sources": {
        "keccak256_empty.sol": {
            "content": "contract C {\n    function f() public returns (bytes32) {\n        return keccak256(\"\");\n    }\n}\n// ----\n// f() -> 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n"
        },
        "ripemd160_packed.sol": {
            "content": "contract C {\n    function f(int256 _input) public returns (bytes32 hash) {\n        uint24 b = 65536;\n        uint c = 256;\n        bytes32 input = bytes32(uint256(_input));\n        return ripemd160(abi.encodePacked(uint8(8), input, b, input, c));\n    }\n}\n// ----\n// f(int256): 4 -> 0xf93175303eba2a7b372174fc9330237f5ad202fc000000000000000000000000\n// f(int256): 5 -> 0x04f4fc112e2bfbe0d38f896a46629e08e2fcfad5000000000000000000000000\n// f(int256): -1 -> 0xc0a2e4b1f3ff766a9a0089e7a410391730872495000000000000000000000000\n"
        },
        "ripemd160.sol": {
            "content": "contract C {\n    function f(int256 input) public returns (bytes32 sha256hash) {\n        return ripemd160(abi.encodePacked(bytes32(uint256(input))));\n    }\n}\n// ----\n// f(int256): 4 -> 0x1b0f3c404d12075c68c938f9f60ebea4f74941a0000000000000000000000000\n// f(int256): 5 -> 0xee54aa84fc32d8fed5a5fe160442ae84626829d9000000000000000000000000\n// f(int256): -1 -> 0x1cf4e77f5966e13e109703cd8a0df7ceda7f3dc3000000000000000000000000\n"
        },
        "keccak256_packed_complex_types.sol": {
            "content": "contract C {\n    uint120[3] x;\n    function f() public returns (bytes32 hash1, bytes32 hash2, bytes32 hash3) {\n        uint120[] memory y = new uint120[](3);\n        x[0] = y[0] = uint120(type(uint).max - 1);\n        x[1] = y[1] = uint120(type(uint).max - 2);\n        x[2] = y[2] = uint120(type(uint).max - 3);\n        hash1 = keccak256(abi.encodePacked(x));\n        hash2 = keccak256(abi.encodePacked(y));\n        hash3 = keccak256(abi.encodePacked(this.f));\n    }\n}\n// ----\n// f() -> 0xba4f20407251e4607cd66b90bfea19ec6971699c03e4a4f3ea737d5818ac27ae, 0xba4f20407251e4607cd66b90bfea19ec6971699c03e4a4f3ea737d5818ac27ae, 0x0e9229fb1d2cd02cee4b6c9f25497777014a8766e3479666d1c619066d2887ec\n"
        },
        "iterated_keccak256_with_bytes.sol": {
            "content": "contract c {\n    bytes data;\n\n    function foo() public returns (bytes32) {\n        data.push(\"x\");\n        data.push(\"y\");\n        data.push(\"z\");\n        return keccak256(abi.encodePacked(\"b\", keccak256(data), \"a\"));\n    }\n}\n// ----\n// foo() -> 0xb338eefce206f9f57b83aa738deecd5326dc4b72dd81ee6a7c621a6facb7acdc\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}