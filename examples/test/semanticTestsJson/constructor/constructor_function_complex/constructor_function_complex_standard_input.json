{
    "language": "Solidity",
    "sources": {
        "arrays_in_constructors.sol": {
            "content": "contract Base {\n    uint public m_x;\n    address[] m_s;\n    constructor(uint x, address[] memory s) {\n        m_x = x;\n        m_s = s;\n    }\n    function part(uint i) public returns (address) {\n        return m_s[i];\n    }\n}\ncontract Main is Base {\n    constructor(address[] memory s, uint x) Base(x, f(s)) {}\n    function f(address[] memory s) public returns (address[] memory) {\n        return s;\n    }\n}\ncontract Creator {\n    function f(uint x, address[] memory s) public returns (uint r, address ch) {\n        Main c = new Main(s, x);\n        r = c.m_x();\n        ch = c.part(x);\n    }\n}\n// ----\n// f(uint256,address[]): 7, 0x40, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 -> 7, 8\n// gas irOptimized: 327784\n// gas irOptimized code: 94000\n// gas legacy: 336623\n// gas legacy code: 244800\n// gas legacyOptimized: 329515\n// gas legacyOptimized code: 117000\n"
        },
        "transient_state_variable_initialization.sol": {
            "content": "contract C {\n    uint128 transient x;\n    uint128 y;\n\n    constructor() {\n        x = 100;\n        y = x;\n    }\n\n    function f() external view returns (uint128) {\n        return y;\n    }\n}\n\n// ====\n// EVMVersion: >=cancun\n// ----\n// f() -> 100\n"
        },
        "constructor_arguments_internal.sol": {
            "content": "contract Helper {\n    bytes3 name;\n    bool flag;\n\n    constructor(bytes3 x, bool f) {\n        name = x;\n        flag = f;\n    }\n\n    function getName() public returns (bytes3 ret) {\n        return name;\n    }\n\n    function getFlag() public returns (bool ret) {\n        return flag;\n    }\n}\n\n\ncontract Main {\n    Helper h;\n\n    constructor() {\n        h = new Helper(\"abc\", true);\n    }\n\n    function getFlag() public returns (bool ret) {\n        return h.getFlag();\n    }\n\n    function getName() public returns (bytes3 ret) {\n        return h.getName();\n    }\n}\n// ----\n// getFlag() -> true\n// getName() -> \"abc\"\n"
        },
        "order_of_evaluation.sol": {
            "content": "contract A {\n    constructor(uint) {}\n}\ncontract B {\n    constructor(uint) {}\n}\ncontract C {\n    constructor(uint) {}\n}\ncontract D {\n    constructor(uint) {}\n}\ncontract X is D, C, B, A {\n    uint[] x;\n    function f(uint _x) internal returns (uint) {\n        x.push(_x);\n    }\n    function g() public view returns (uint[] memory) { return x; }\n    constructor() A(f(1)) C(f(2)) B(f(3)) D(f(4)) {}\n}\n// ----\n// g() -> 0x20, 4, 1, 3, 2, 4\n"
        },
        "payable_constructor.sol": {
            "content": "contract C {\n    constructor() payable {}\n}\n// ----\n// constructor(), 27 wei ->\n"
        },
        "constructor_static_array_argument.sol": {
            "content": "contract C {\n    uint256 public a;\n    uint256[3] public b;\n\n    constructor(uint256 _a, uint256[3] memory _b) {\n        a = _a;\n        b = _b;\n    }\n}\n// ----\n// constructor(): 1, 2, 3, 4 ->\n// gas irOptimized: 148129\n// gas irOptimized code: 23000\n// gas legacy: 157977\n// gas legacy code: 60400\n// gas legacyOptimized: 149973\n// gas legacyOptimized code: 26200\n// a() -> 1\n// b(uint256): 0 -> 2\n// b(uint256): 1 -> 3\n// b(uint256): 2 -> 4\n"
        },
        "no_callvalue_check.sol": {
            "content": "contract A1 {}\ncontract B1 is A1 { constructor() payable {} }\n\ncontract A2 { constructor() {} }\ncontract B2 is A2 { constructor() payable {} }\n\ncontract B3 { constructor() payable {} }\n\ncontract C {\n\tfunction f() public payable returns (bool) {\n\t\t// Make sure none of these revert.\n\t\tnew B1{value: 10}();\n\t\tnew B2{value: 10}();\n\t\tnew B3{value: 10}();\n\t\treturn true;\n\t}\n}\n// ----\n// f(), 2000 ether -> true\n// gas irOptimized: 117623\n// gas irOptimized code: 1800\n// gas legacy: 117821\n// gas legacy code: 4800\n// gas legacyOptimized: 117690\n// gas legacyOptimized code: 4800\n"
        },
        "store_internal_unused_function_in_constructor.sol": {
            "content": "contract C {\n    function() returns (uint256) internal x;\n\n    constructor() {\n        x = unused;\n    }\n\n    function unused() internal returns (uint256) {\n        return 7;\n    }\n\n    function t() public returns (uint256) {\n        return x();\n    }\n}\n// ----\n// t() -> 7\n"
        },
        "constructor_function_complex.sol": {
            "content": "contract D {\n    uint public x;\n    constructor(function() external pure returns (uint) g) {\n        x = g();\n    }\n}\n\ncontract C {\n    function f() public returns (uint r) {\n        D d = new D(this.sixteen);\n        r = d.x();\n    }\n\n    function sixteen() public pure returns (uint) {\n        return 16;\n    }\n}\n// ----\n// f() -> 16\n// gas legacy: 78477\n// gas legacy code: 23600\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}