{
    "language": "Solidity",
    "sources": {
        "multiline.sol": {
            "content": "contract C {\n    function f(uint a, uint b, uint c, uint d, uint e) public returns (uint) {\n        return a + b + c + d + e;\n    }\n}\n// ====\n// allowNonExistingFunctions: true\n// ----\n// f(uint256,uint256,uint256,uint256,uint256): 1, 1, 1, 1, 1\n// -> 5\n// g()\n// # g() does not exist #\n// -> FAILURE\n"
        },
        "multiline_comments.sol": {
            "content": "contract C {\n    function f(uint a, uint b, uint c, uint d, uint e) public returns (uint) {\n        return a + b + c + d + e;\n    }\n}\n// ----\n// f(uint256,uint256,uint256,uint256,uint256): 1, 1, 1, 1, 1\n// # A comment on the function parameters. #\n// -> 5\n// f(uint256,uint256,uint256,uint256,uint256):\n// 1,\n// 1,\n// 1,\n// 1,\n// 1\n// -> 5\n// # Should return sum of all parameters. #\n"
        },
        "structs.sol": {
            "content": "pragma abicoder               v2;\n\ncontract C {\n    struct S {\n        uint a;\n        uint b;\n    }\n    struct T {\n        uint a;\n        uint b;\n        string s;\n    }\n    function s() public returns (S memory) {\n        return S(23, 42);\n    }\n    function t() public returns (T memory) {\n        return T(23, 42, \"any\");\n    }\n}\n// ----\n// s() -> 23, 42\n// t() -> 0x20, 23, 42, 0x60, 3, \"any\"\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}