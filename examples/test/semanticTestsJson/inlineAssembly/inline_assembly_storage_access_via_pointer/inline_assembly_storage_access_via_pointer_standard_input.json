{
    "language": "Solidity",
    "sources": {
        "selfbalance.sol": {
            "content": "contract C {\n    function f() public payable returns (uint ret) {\n        assembly {\n            ret := selfbalance()\n        }\n    }\n}\n// ====\n// EVMVersion: >=istanbul\n// ----\n// f(), 254 wei -> 254\n"
        },
        "calldata_array_read.sol": {
            "content": "contract C {\n    function f(uint[2][] calldata x) public returns (uint o, uint l, uint s) {\n        assembly { l := x.length o := x.offset }\n        uint[2] calldata t = x[1];\n        // statically-sized arrays only use one slot, so we read directly.\n        assembly { s := t }\n    }\n}\n// ----\n// f(uint256[2][]): 0x20, 2, 1, 2, 3, 4 -> 0x44, 2, 0x84\n"
        },
        "inline_assembly_storage_access_via_pointer.sol": {
            "content": "contract C {\n    struct Data {\n        uint256 contents;\n    }\n    uint256 public separator;\n    Data public a;\n    uint256 public separator2;\n\n    function f() public returns (bool) {\n        Data storage x = a;\n        uint256 off;\n        assembly {\n            sstore(x.slot, 7)\n            off := x.offset\n        }\n        assert(off == 0);\n        return true;\n    }\n}\n// ----\n// f() -> true\n// a() -> 7\n// separator() -> 0\n// separator2() -> 0\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}