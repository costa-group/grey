{
    "language": "Solidity",
    "sources": {
        "struct_simple.sol": {
            "content": "pragma abicoder               v2;\n\ncontract C {\n    struct S { uint a; uint8 b; uint8 c; bytes2 d; }\n    function f(S memory s) public pure returns (uint a, uint b, uint c, uint d) {\n        a = s.a;\n        b = s.b;\n        c = s.c;\n        d = uint16(s.d);\n    }\n}\n// ----\n// f((uint256,uint8,uint8,bytes2)): 1, 2, 3, \"ab\" -> 1, 2, 3, 0x6162\n"
        },
        "struct_function.sol": {
            "content": "pragma abicoder               v2;\n\ncontract C {\n    struct S { function () external returns (uint) f; uint b; }\n    function f(S memory s) public returns (uint, uint) {\n        return (s.f(), s.b);\n    }\n    function test() public returns (uint, uint) {\n        return this.f(S(this.g, 3));\n    }\n    function g() public returns (uint) { return 7; }\n}\n// ----\n// test() -> 7, 3\n"
        },
        "struct_validation.sol": {
            "content": "pragma abicoder               v2;\n\ncontract C {\n\tstruct S { int16 a; uint8 b; bytes2 c; }\n\tfunction f(S memory s) public pure returns (uint a, uint b, uint c) {\n\t\tassembly {\n\t\t\ta := mload(s)\n\t\t\tb := mload(add(s, 0x20))\n\t\t\tc := mload(add(s, 0x40))\n\t\t}\n\t}\n}\n// ----\n// f((int16,uint8,bytes2)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01, 0xff, \"ab\" -> 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01, 0xff, \"ab\"\n// f((int16,uint8,bytes2)): 0xff010, 0xff, \"ab\" -> FAILURE\n// f((int16,uint8,bytes2)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01, 0xff0002, \"ab\" -> FAILURE\n// f((int16,uint8,bytes2)): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01, 0xff, \"abcd\" -> FAILURE\n"
        },
        "mediocre_struct.sol": {
            "content": "pragma abicoder               v2;\n\ncontract C {\n    struct S { C c; }\n    function f(uint a, S[2] memory s1, uint b) public returns (uint r1, C r2, uint r3) {\n        r1 = a;\n        r2 = s1[0].c;\n        r3 = b;\n    }\n}\n// ----\n// f(uint256,(address)[2],uint256): 7, 0, 0, 8 -> 7, 0, 8\n"
        },
        "validation_function_type_inside_struct.sol": {
            "content": "pragma abicoder               v2;\n\ncontract C {\n    struct S { function () external x; }\n    function f(S memory) public pure returns (uint r) { r = 1; }\n    function g(S calldata) external pure returns (uint r) { r = 2; }\n    function h(S calldata s) external pure returns (uint r) { s.x; r = 3; }\n}\n// ----\n// f((function)): \"01234567890123456789abcd\" -> 1\n// f((function)): \"01234567890123456789abcdX\" -> FAILURE\n// g((function)): \"01234567890123456789abcd\" -> 2\n// g((function)): \"01234567890123456789abcdX\" -> 2\n// h((function)): \"01234567890123456789abcd\" -> 3\n// h((function)): \"01234567890123456789abcdX\" -> FAILURE\n"
        },
        "struct_short.sol": {
            "content": "pragma abicoder               v2;\n\ncontract C {\n    struct S { int a; uint b; bytes16 c; }\n    function f(S memory s) public pure returns (S memory q) {\n        q = s;\n    }\n}\n// ----\n// f((int256,uint256,bytes16)): 0xff010, 0xff0002, \"abcd\" -> 0xff010, 0xff0002, \"abcd\"\n// f((int256,uint256,bytes16)): 0xff010, 0xff0002, 0x1111222233334444555566667777888800000000000000000000000000000000 -> 0xff010, 0xff0002, left(0x11112222333344445555666677778888)\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}