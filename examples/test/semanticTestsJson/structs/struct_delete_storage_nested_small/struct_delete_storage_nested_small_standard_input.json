{
    "language": "Solidity",
    "sources": {
        "memory_struct_named_constructor.sol": {
            "content": "pragma abicoder               v2;\n\ncontract C {\n    struct S {\n        uint256 a;\n        bool x;\n    }\n\n    function s() public returns(S memory)\n    {\n        return S({x: true, a: 8});\n    }\n}\n// ----\n// s() -> 8, true\n"
        },
        "copy_from_mapping.sol": {
            "content": "pragma abicoder v2;\n\ncontract C {\n    struct S {\n        bytes b;\n        uint16[] a;\n        uint16 u;\n    }\n\n    constructor() {\n        uint16[] memory a = new uint16[](2);\n        a[0] = 13;\n        a[1] = 14;\n\n        m[7] = S({b: \"foo\", a: a, u: 7});\n    }\n\n    mapping (uint => S) m;\n    S s;\n\n    function to_state() public returns (S memory) {\n\ts = m[7];\n        return s;\n    }\n\n    function to_storage() public returns (S memory) {\n        S storage sLocal = s;\n\tsLocal = m[7];\n        return sLocal;\n    }\n\n    function to_memory() public returns (S memory) {\n\treturn m[7];\n    }\n\n}\n// ----\n// to_state() -> 0x20, 0x60, 0xa0, 7, 3, 0x666F6F0000000000000000000000000000000000000000000000000000000000, 2, 13, 14\n// gas irOptimized: 121282\n// gas legacy: 122977\n// gas legacyOptimized: 121652\n// to_storage() -> 0x20, 0x60, 0xa0, 7, 3, 0x666F6F0000000000000000000000000000000000000000000000000000000000, 2, 13, 14\n// to_memory() -> 0x20, 0x60, 0xa0, 7, 3, 0x666F6F0000000000000000000000000000000000000000000000000000000000, 2, 13, 14\n"
        },
        "struct_delete_storage_nested_small.sol": {
            "content": "contract C {\n    struct S {\n        uint32 a;\n        S[] x;\n    }\n    S s;\n    function f() public returns (uint256 r1, uint256 r2, uint256 r3) {\n        assembly {\n            // 2 ** 150 - 1\n            sstore(s.slot, 1427247692705959881058285969449495136382746623)\n        }\n        s.a = 1;\n        s.x.push(); s.x.push();\n        S storage ptr1 = s.x[0];\n        S storage ptr2 = s.x[1];\n        assembly {\n            // 2 ** 150 - 1\n            sstore(ptr1.slot, 1427247692705959881058285969449495136382746623)\n            sstore(ptr2.slot, 1427247692705959881058285969449495136382746623)\n        }\n        s.x[0].a = 2; s.x[1].a = 3;\n        delete s;\n        assert(s.a == 0);\n        assert(s.x.length == 0);\n        assembly {\n            r1 := sload(s.slot)\n            r2 := sload(ptr1.slot)\n            r3 := sload(ptr2.slot)\n        }\n    }\n}\n// ====\n// compileViaYul: true\n// ----\n// f() -> 0, 0, 0\n// gas irOptimized: 117101\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}