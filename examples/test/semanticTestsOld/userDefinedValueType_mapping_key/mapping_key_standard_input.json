{"language": "Solidity", "sources": {"mapping_key.sol": {"content": "type MyInt is int;\ncontract C {\n    mapping(MyInt => int) public m;\n    function set(MyInt key, int value) external {\n        m[key] = value;\n    }\n    function set_unwrapped(int key, int value) external {\n        m[MyInt.wrap(key)] = value;\n    }\n}\n// ----\n// set(int256,int256): 1, 1 ->\n// m(int256): 1 -> 1\n// set_unwrapped(int256,int256): 1, 2 ->\n// m(int256): 1 -> 2\n// m(int256): 2 -> 0\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}