{"language": "Solidity", "sources": {"keccak256_optimizer_cache_bug.sol": {"content": "contract C {\n  uint[] data;\n\n  function val() public returns (bool) {\n    assembly {\n        sstore(0, 2)\n        mstore(0, 0)\n        sstore(keccak256(0, 32), 234)\n        // A bug in the caching mechanism previously caused keccak256(0, 23) to be the same as\n        // keccak256(0, 32), leading to `data[1] == 123` being true.\n        sstore(add(keccak256(0, 23), 1), 123)\n    }\n    assert(data[1] != 123);\n    assert(data[1] == 0);\n    return true;\n  }\n}\n// ----\n// val() -> true\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}