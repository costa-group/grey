{"language": "Solidity", "sources": {"mapping_state.sol": {"content": "contract Ballot {\n\tmapping(address => bool) canVote;\n\tmapping(address => uint) voteCount;\n\tmapping(address => bool) voted;\n\tfunction getVoteCount(address addr) public returns (uint retVoteCount) {\n\t\treturn voteCount[addr];\n\t}\n\tfunction grantVoteRight(address addr) public {\n\t\tcanVote[addr] = true;\n\t}\n\tfunction vote(address voter, address vote) public returns (bool success) {\n\t\tif (!canVote[voter] || voted[voter]) return false;\n\t\tvoted[voter] = true;\n\t\tvoteCount[vote] = voteCount[vote] + 1;\n\t\treturn true;\n\t}\n}\n// ----\n// getVoteCount(address): 0 -> 0\n// getVoteCount(address): 1 -> 0\n// getVoteCount(address): 2 -> 0\n// vote(address,address): 0, 2 -> false\n// getVoteCount(address): 0 -> 0\n// getVoteCount(address): 1 -> 0\n// getVoteCount(address): 2 -> 0\n// grantVoteRight(address): 0 ->\n// grantVoteRight(address): 1 ->\n// vote(address,address): 0, 2 -> true\n// getVoteCount(address): 0 -> 0\n// getVoteCount(address): 1 -> 0\n// getVoteCount(address): 2 -> 1\n// vote(address,address): 0, 1 -> false\n// getVoteCount(address): 0 -> 0\n// getVoteCount(address): 1 -> 0\n// getVoteCount(address): 2 -> 1\n// vote(address,address): 2, 1 -> false\n// getVoteCount(address): 0 -> 0\n// getVoteCount(address): 1 -> 0\n// getVoteCount(address): 2 -> 1\n// grantVoteRight(address): 2 ->\n// vote(address,address): 2, 1 -> true\n// getVoteCount(address): 0 -> 0\n// getVoteCount(address): 1 -> 1\n// getVoteCount(address): 2 -> 1\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}