{"language": "Solidity", "sources": {"transient_storage_low_level_calls.sol": {"content": "contract D {\n    function addOne() external {\n        assembly {\n            let x := tload(0)\n            tstore(0, add(x, 1))\n        }\n    }\n    function get() external returns (uint x) {\n        assembly {\n            x := tload(0)\n        }\n    }\n}\n\ncontract C {\n    function set(uint x) external {\n        assembly {\n            tstore(0, x)\n        }\n    }\n\n    function get() external view returns (uint x) {\n        assembly {\n            x := tload(0)\n        }\n    }\n\n    function testDelegateCall() external returns (bool) {\n        this.set(5);\n        D d = new D();\n        // Caller contract is the owner of the transient storage\n        (bool success, ) = address(d).delegatecall(abi.encodeCall(d.addOne, ()));\n        require(success);\n        require(this.get() == 6);\n        return true;\n    }\n\n    function testCall() external returns (bool) {\n        this.set(5);\n        D d = new D();\n        // Callee/Target contract is the owner of the transient storage\n        (bool success, ) = address(d).call(abi.encodeCall(d.addOne, ()));\n        require(success);\n        require(d.get() == 1);\n        return true;\n    }\n\n    function tloadAllowedStaticCall() external returns (bool) {\n        this.set(5);\n        D d = new D();\n        (bool success, bytes memory result) = address(d).staticcall(abi.encodeCall(d.get, ()));\n        require(success);\n        require(abi.decode(result, (uint)) == 0);\n        return true;\n    }\n\n    function tstoreNotAllowedStaticCall() external returns (bool) {\n        D d = new D();\n        (bool success, ) = address(d).staticcall(abi.encodeCall(d.addOne, ()));\n        require(!success);\n        return true;\n    }\n}\n// ====\n// EVMVersion: >=cancun\n// ----\n// testDelegateCall() -> true\n// testCall() -> true\n// tloadAllowedStaticCall() -> true\n// tstoreNotAllowedStaticCall() -> true\n// gas irOptimized: 98419720\n// gas irOptimized code: 19000\n// gas legacy: 98409086\n// gas legacy code: 30000\n// gas legacyOptimized: 98420962\n// gas legacyOptimized code: 17800\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}