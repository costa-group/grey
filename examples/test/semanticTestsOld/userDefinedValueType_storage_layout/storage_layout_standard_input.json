{"language": "Solidity", "sources": {"storage_layout.sol": {"content": "type MyInt8 is int8;\ntype MyAddress is address;\ntype MyInt96 is int96;\n\ncontract C {\n    MyInt8 a;\n    MyInt8 b;\n    MyInt8 c;\n    MyAddress d;\n\n    MyAddress e;\n\n    MyAddress f;\n    MyInt96 g;\n\n    function storage_a() pure external returns(uint slot, uint offset) {\n        assembly {\n            slot := a.slot\n            offset := a.offset\n        }\n    }\n\n    function storage_b() pure external returns(uint slot, uint offset) {\n        assembly {\n            slot := b.slot\n            offset := b.offset\n        }\n    }\n\n    function storage_c() pure external returns(uint slot, uint offset) {\n        assembly {\n            slot := d.slot\n            offset := c.offset\n        }\n    }\n    function storage_d() pure external returns(uint slot, uint offset) {\n        assembly {\n            slot := d.slot\n            offset := d.offset\n        }\n    }\n\n    function storage_e() pure external returns(uint slot, uint offset) {\n        assembly {\n            slot := e.slot\n            offset := e.offset\n        }\n    }\n\n    function storage_f() pure external returns(uint slot, uint offset) {\n        assembly {\n            slot := f.slot\n            offset := f.offset\n        }\n    }\n\n    function storage_g() pure external returns(uint slot, uint offset) {\n        assembly {\n            slot := g.slot\n            offset := g.offset\n        }\n    }\n\n}\n// ----\n// storage_a() -> 0, 0\n// storage_b() -> 0, 1\n// storage_c() -> 0, 2\n// storage_d() -> 0, 3\n// storage_e() -> 1, 0\n// storage_f() -> 2, 0\n// storage_g() -> 2, 0x14\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}