{"language": "Solidity", "sources": {"uint.sol": {"content": "contract test {\n\n\tfunction uintMinA() public pure returns(bool) {\n\n\t\tuint8 uint8_min = type(uint8).min;\n\t\trequire(uint8_min == 0);\n\n\t\tuint16 uint16_min = type(uint16).min;\n\t\trequire(uint16_min == 0);\n\n\t\tuint24 uint24_min = type(uint24).min;\n\t\trequire(uint24_min == 0);\n\n\t\tuint32 uint32_min = type(uint32).min;\n\t\trequire(uint32_min == 0);\n\n\t\tuint40 uint40_min = type(uint40).min;\n\t\trequire(uint40_min == 0);\n\n\t\tuint48 uint48_min = type(uint48).min;\n\t\trequire(uint48_min == 0);\n\n\t\tuint56 uint56_min = type(uint56).min;\n\t\trequire(uint56_min == 0);\n\n\t\tuint64 uint64_min = type(uint64).min;\n\t\trequire(uint64_min == 0);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMinB() public pure returns(bool) {\n\n\t\tuint72 uint72_min = type(uint72).min;\n\t\trequire(uint72_min == 0);\n\n\t\tuint80 uint80_min = type(uint80).min;\n\t\trequire(uint80_min == 0);\n\n\t\tuint88 uint88_min = type(uint88).min;\n\t\trequire(uint88_min == 0);\n\n\t\tuint96 uint96_min = type(uint96).min;\n\t\trequire(uint96_min == 0);\n\n\t\tuint104 uint104_min = type(uint104).min;\n\t\trequire(uint104_min == 0);\n\n\t\tuint112 uint112_min = type(uint112).min;\n\t\trequire(uint112_min == 0);\n\n\t\tuint120 uint120_min = type(uint120).min;\n\t\trequire(uint120_min == 0);\n\n\t\tuint128 uint128_min = type(uint128).min;\n\t\trequire(uint128_min == 0);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMinC() public pure returns(bool) {\n\n\t\tuint136 uint136_min = type(uint136).min;\n\t\trequire(uint136_min == 0);\n\n\t\tuint144 uint144_min = type(uint144).min;\n\t\trequire(uint144_min == 0);\n\n\t\tuint152 uint152_min = type(uint152).min;\n\t\trequire(uint152_min == 0);\n\n\t\tuint160 uint160_min = type(uint160).min;\n\t\trequire(uint160_min == 0);\n\n\t\tuint168 uint168_min = type(uint168).min;\n\t\trequire(uint168_min == 0);\n\n\t\tuint176 uint176_min = type(uint176).min;\n\t\trequire(uint176_min == 0);\n\n\t\tuint184 uint184_min = type(uint184).min;\n\t\trequire(uint184_min == 0);\n\n\t\tuint192 uint192_min = type(uint192).min;\n\t\trequire(uint192_min == 0);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMinD() public pure returns(bool) {\n\n\t\tuint200 uint200_min = type(uint200).min;\n\t\trequire(uint200_min == 0);\n\n\t\tuint208 uint208_min = type(uint208).min;\n\t\trequire(uint208_min == 0);\n\n\t\tuint216 uint216_min = type(uint216).min;\n\t\trequire(uint216_min == 0);\n\n\t\tuint224 uint224_min = type(uint224).min;\n\t\trequire(uint224_min == 0);\n\n\t\tuint232 uint232_min = type(uint232).min;\n\t\trequire(uint232_min == 0);\n\n\t\tuint240 uint240_min = type(uint240).min;\n\t\trequire(uint240_min == 0);\n\n\t\tuint248 uint248_min = type(uint248).min;\n\t\trequire(uint248_min == 0);\n\n\t\tuint256 uint256_min = type(uint256).min;\n\t\trequire(uint256_min == 0);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMaxA() public pure returns (bool) {\n\n\t\tuint8 uint8_max = type(uint8).max;\n\t\trequire(uint8_max == 2**8-1);\n\n\t\tuint16 uint16_max = type(uint16).max;\n\t\trequire(uint16_max == 2**16-1);\n\n\t\tuint24 uint24_max = type(uint24).max;\n\t\trequire(uint24_max == 2**24-1);\n\n\t\tuint32 uint32_max = type(uint32).max;\n\t\trequire(uint32_max == 2**32-1);\n\n\t\tuint40 uint40_max = type(uint40).max;\n\t\trequire(uint40_max == 2**40-1);\n\n\t\tuint48 uint48_max = type(uint48).max;\n\t\trequire(uint48_max == 2**48-1);\n\n\t\tuint56 uint56_max = type(uint56).max;\n\t\trequire(uint56_max == 2**56-1);\n\n\t\tuint64 uint64_max = type(uint64).max;\n\t\trequire(uint64_max == 2**64-1);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMaxB() public pure returns (bool) {\n\n\t\tuint72 uint72_max = type(uint72).max;\n\t\trequire(uint72_max == 2**72-1);\n\n\t\tuint80 uint80_max = type(uint80).max;\n\t\trequire(uint80_max == 2**80-1);\n\n\t\tuint88 uint88_max = type(uint88).max;\n\t\trequire(uint88_max == 2**88-1);\n\n\t\tuint96 uint96_max = type(uint96).max;\n\t\trequire(uint96_max == 2**96-1);\n\n\t\tuint104 uint104_max = type(uint104).max;\n\t\trequire(uint104_max == 2**104-1);\n\n\t\tuint112 uint112_max = type(uint112).max;\n\t\trequire(uint112_max == 2**112-1);\n\n\t\tuint120 uint120_max = type(uint120).max;\n\t\trequire(uint120_max == 2**120-1);\n\n\t\tuint128 uint128_max = type(uint128).max;\n\t\trequire(uint128_max == 2**128-1);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMaxC() public pure returns (bool) {\n\n\t\tuint136 uint136_max = type(uint136).max;\n\t\trequire(uint136_max == 2**136-1);\n\n\t\tuint144 uint144_max = type(uint144).max;\n\t\trequire(uint144_max == 2**144-1);\n\n\t\tuint152 uint152_max = type(uint152).max;\n\t\trequire(uint152_max == 2**152-1);\n\n\t\tuint160 uint160_max = type(uint160).max;\n\t\trequire(uint160_max == 2**160-1);\n\n\t\tuint168 uint168_max = type(uint168).max;\n\t\trequire(uint168_max == 2**168-1);\n\n\t\tuint176 uint176_max = type(uint176).max;\n\t\trequire(uint176_max == 2**176-1);\n\n\t\tuint184 uint184_max = type(uint184).max;\n\t\trequire(uint184_max == 2**184-1);\n\n\t\tuint192 uint192_max = type(uint192).max;\n\t\trequire(uint192_max == 2**192-1);\n\n\t\treturn true;\n\t}\n\n\tfunction uintMaxD() public pure returns(bool) {\n\t\tuint200 uint200_max = type(uint200).max;\n\t\trequire(uint200_max == 2**200-1);\n\n\t\tuint208 uint208_max = type(uint208).max;\n\t\trequire(uint208_max == 2**208-1);\n\n\t\tuint216 uint216_max = type(uint216).max;\n\t\trequire(uint216_max == 2**216-1);\n\n\t\tuint224 uint224_max = type(uint224).max;\n\t\trequire(uint224_max == 2**224-1);\n\n\t\tuint232 uint232_max = type(uint232).max;\n\t\trequire(uint232_max == 2**232-1);\n\n\t\tuint240 uint240_max = type(uint240).max;\n\t\trequire(uint240_max == 2**240-1);\n\n\t\tuint248 uint248_max = type(uint248).max;\n\t\trequire(uint248_max == 2**248-1);\n\n\t\tuint256 uint256_max = type(uint256).max;\n\t\trequire(uint256_max == 2**256-1);\n\n\t\treturn true;\n\t}\n}\n// ----\n// uintMinA() -> true\n// uintMinB() -> true\n// uintMinC() -> true\n// uintMinD() -> true\n// uintMaxA() -> true\n// uintMaxB() -> true\n// uintMaxC() -> true\n// uintMaxD() -> true\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}