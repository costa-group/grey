{"language": "Solidity", "sources": {"function.sol": {"content": "pragma abicoder               v2;\n\ncontract C {\n    struct S { function() external f; }\n    function ggg(function() external x) external pure returns (uint256 r) {\n        assembly { r := calldataload(4) }\n    }\n    function h(S calldata x) external pure returns (uint256 r) {\n        x.f; // validation only happens here\n        assembly { r := calldataload(4) }\n    }\n    function dummy() external {}\n    function ffff(uint256 a) external view returns (uint256, uint256) {\n        S memory s = S(this.dummy);\n        assembly { mstore(s, a) }\n        return (this.ggg(s.f), this.h(s));\n    }\n}\n// ----\n// ffff(uint256): 0 -> 0, 0\n// ggg(function): 0 -> 0\n// ffff(uint256): \"01234567890123456789abcd\" -> \"01234567890123456789abcd\", \"01234567890123456789abcd\"\n// ggg(function): \"01234567890123456789abcd\" -> \"01234567890123456789abcd\"\n// h((function)): \"01234567890123456789abcd\" -> \"01234567890123456789abcd\"\n// h((function)): 0 -> 0\n// ffff(uint256): \"01234567890123456789abcdX\" -> \"01234567890123456789abcd\", \"01234567890123456789abcd\"\n// ggg(function): \"01234567890123456789abcdX\" -> FAILURE\n// h((function)): \"01234567890123456789abcdX\" -> FAILURE\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}