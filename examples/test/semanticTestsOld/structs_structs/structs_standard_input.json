{"language": "Solidity", "sources": {"structs.sol": {"content": "contract test {\n    struct s1 {\n        uint8 x;\n        bool y;\n    }\n    struct s2 {\n        uint32 z;\n        s1 s1data;\n        mapping(uint8 => s2) recursive;\n    }\n    s2 data;\n    function check() public returns (bool ok) {\n        return data.z == 1 && data.s1data.x == 2 &&\n            data.s1data.y == true &&\n            data.recursive[3].recursive[4].z == 5 &&\n            data.recursive[4].recursive[3].z == 6 &&\n            data.recursive[0].s1data.y == false &&\n            data.recursive[4].z == 9;\n    }\n    function set() public {\n        data.z = 1;\n        data.s1data.x = 2;\n        data.s1data.y = true;\n        data.recursive[3].recursive[4].z = 5;\n        data.recursive[4].recursive[3].z = 6;\n        data.recursive[0].s1data.y = false;\n        data.recursive[4].z = 9;\n    }\n}\n// ----\n// check() -> false\n// set() ->\n// gas irOptimized: 134073\n// gas legacy: 135243\n// gas legacyOptimized: 134062\n// check() -> true\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}