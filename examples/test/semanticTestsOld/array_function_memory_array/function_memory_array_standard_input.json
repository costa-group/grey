{"language": "Solidity", "sources": {"function_memory_array.sol": {"content": "contract C {\n    function a(uint256 x) public returns (uint256) {\n        return x + 1;\n    }\n\n    function b(uint256 x) public returns (uint256) {\n        return x + 2;\n    }\n\n    function c(uint256 x) public returns (uint256) {\n        return x + 3;\n    }\n\n    function d(uint256 x) public returns (uint256) {\n        return x + 5;\n    }\n\n    function e(uint256 x) public returns (uint256) {\n        return x + 8;\n    }\n\n    function test(uint256 x, uint256 i) public returns (uint256) {\n        function(uint) internal returns (uint)[] memory arr =\n            new function(uint) internal returns (uint)[](10);\n        arr[0] = a;\n        arr[1] = b;\n        arr[2] = c;\n        arr[3] = d;\n        arr[4] = e;\n        return arr[i](x);\n    }\n}\n// ----\n// test(uint256,uint256): 10, 0 -> 11\n// test(uint256,uint256): 10, 1 -> 12\n// test(uint256,uint256): 10, 2 -> 13\n// test(uint256,uint256): 10, 3 -> 15\n// test(uint256,uint256): 10, 4 -> 18\n// test(uint256,uint256): 10, 5 -> FAILURE, hex\"4e487b71\", 0x51\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}