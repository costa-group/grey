{"language": "Solidity", "sources": {"abi_encode_call_is_consistent.sol": {"content": "pragma abicoder v2;\n\ncontract C {\n\tbool sideEffectRan = false;\n\n\tfunction(uint256, string memory) external fPointer;\n\tfunction fExternal(uint256 p, string memory t) external {}\n\tstring xstor;\n\tfunction getExternalFunctionPointer() public returns (function(uint256, string memory) external) {\n\t\tsideEffectRan = true;\n\t\treturn this.fExternal;\n\t}\n\n\tfunction fSignatureFromLiteral() public pure returns (bytes memory) {\n\t\treturn abi.encodeWithSignature(\"fExternal(uint256,string)\", 1, \"123\");\n\t}\n\tfunction fSignatureFromLiteralCall() public view returns (bytes memory) {\n\t\treturn abi.encodeCall(this.fExternal, (1, \"123\"));\n\t}\n\tfunction fSignatureFromMemory() public pure returns (bytes memory) {\n\t\tstring memory x = \"fExternal(uint256,string)\";\n\t\treturn abi.encodeWithSignature(x, 1, \"123\");\n\t}\n\tfunction fSignatureFromMemoryCall() public view returns (bytes memory) {\n\t\treturn abi.encodeCall(this.fExternal, (1,\"123\"));\n\t}\n\tfunction fSignatureFromMemorys() public returns (bytes memory) {\n\t\txstor = \"fExternal(uint256,string)\";\n\t\treturn abi.encodeWithSignature(xstor, 1, \"123\");\n\t}\n\tfunction fPointerCall() public returns(bytes memory) {\n\t\tfPointer = this.fExternal;\n\t\treturn abi.encodeCall(fPointer, (1, \"123\"));\n\t}\n\tfunction fLocalPointerCall() public returns(bytes memory) {\n\t\tfunction(uint256, string memory) external localFunctionPointer = this.fExternal;\n\t\treturn abi.encodeCall(localFunctionPointer, (1, \"123\"));\n\t}\n\tfunction fReturnedFunctionPointer() public returns (bytes memory) {\n\t\treturn abi.encodeCall(getExternalFunctionPointer(), (1, \"123\"));\n\t}\n\n\tfunction assertConsistentSelectors() public {\n\t\tassert(keccak256(fSignatureFromLiteral()) == keccak256(fSignatureFromLiteralCall()));\n\t\tassert(keccak256(fSignatureFromMemory()) == keccak256(fSignatureFromMemoryCall()));\n\t\tassert(keccak256(fSignatureFromMemoryCall()) == keccak256(fSignatureFromMemorys()));\n\t\tassert(keccak256(fPointerCall()) == keccak256(fSignatureFromLiteral()));\n\t\tassert(keccak256(fLocalPointerCall()) == keccak256(fSignatureFromLiteral()));\n\t\tassert(keccak256(fReturnedFunctionPointer()) == keccak256(fSignatureFromLiteral()));\n\t}\n}\n// ----\n// assertConsistentSelectors() ->\n// fSignatureFromLiteral() -> 0x20, 0x84, 23450202028776381066253055403048136312616272755117076566855971503345107992576, 26959946667150639794667015087019630673637144422540572481103610249216, 1725436586697640946858688965569256363112777243042596638790631055949824, 86060793054017993816230018372407419485142305772921726565498526629888, 0\n// fSignatureFromLiteralCall() -> 0x20, 0x84, 23450202028776381066253055403048136312616272755117076566855971503345107992576, 26959946667150639794667015087019630673637144422540572481103610249216, 1725436586697640946858688965569256363112777243042596638790631055949824, 86060793054017993816230018372407419485142305772921726565498526629888, 0\n// fSignatureFromMemory() -> 0x20, 0x84, 23450202028776381066253055403048136312616272755117076566855971503345107992576, 26959946667150639794667015087019630673637144422540572481103610249216, 1725436586697640946858688965569256363112777243042596638790631055949824, 86060793054017993816230018372407419485142305772921726565498526629888, 0\n// fSignatureFromMemoryCall() -> 0x20, 0x84, 23450202028776381066253055403048136312616272755117076566855971503345107992576, 26959946667150639794667015087019630673637144422540572481103610249216, 1725436586697640946858688965569256363112777243042596638790631055949824, 86060793054017993816230018372407419485142305772921726565498526629888, 0\n// fSignatureFromMemorys() -> 0x20, 0x84, 23450202028776381066253055403048136312616272755117076566855971503345107992576, 26959946667150639794667015087019630673637144422540572481103610249216, 1725436586697640946858688965569256363112777243042596638790631055949824, 86060793054017993816230018372407419485142305772921726565498526629888, 0\n// fPointerCall() -> 0x20, 0x84, 23450202028776381066253055403048136312616272755117076566855971503345107992576, 26959946667150639794667015087019630673637144422540572481103610249216, 1725436586697640946858688965569256363112777243042596638790631055949824, 86060793054017993816230018372407419485142305772921726565498526629888, 0\n// fLocalPointerCall() -> 0x20, 0x84, 23450202028776381066253055403048136312616272755117076566855971503345107992576, 26959946667150639794667015087019630673637144422540572481103610249216, 1725436586697640946858688965569256363112777243042596638790631055949824, 86060793054017993816230018372407419485142305772921726565498526629888, 0\n// fReturnedFunctionPointer() -> 0x20, 0x84, 23450202028776381066253055403048136312616272755117076566855971503345107992576, 26959946667150639794667015087019630673637144422540572481103610249216, 1725436586697640946858688965569256363112777243042596638790631055949824, 86060793054017993816230018372407419485142305772921726565498526629888, 0\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}