{"language": "Solidity", "sources": {"copy_substructures_to_mapping.sol": {"content": "pragma abicoder v2;\n\ncontract C {\n    struct S {\n        bytes b;\n        uint16[] a;\n        uint16 u;\n    }\n\n    S s;\n    constructor() {\n        uint16[] memory a = new uint16[](2);\n        a[0] = 13;\n        a[1] = 14;\n\n        s.b = \"foo\";\n        s.a = a;\n        s.u = 21;\n    }\n\n    mapping (uint => S) m;\n\n    function from_memory() public returns (S memory) {\n        S memory sMemory = s;\n        m[0].b = sMemory.b;\n        m[0].a = sMemory.a;\n        m[0].u = sMemory.u;\n        return m[0];\n    }\n\n    function from_state() public returns (S memory) {\n        m[1].b = s.b;\n        m[1].a = s.a;\n        m[1].u = s.u;\n        return m[1];\n    }\n\n    function from_storage() public returns (S memory) {\n        S storage sLocal = s;\n        m[1].b = sLocal.b;\n        m[1].a = sLocal.a;\n        m[1].u = sLocal.u;\n        return m[1];\n    }\n\n    function from_calldata(S calldata sCalldata) public returns (S memory) {\n        m[2].b = sCalldata.b;\n        m[2].a = sCalldata.a;\n        m[2].u = sCalldata.u;\n        return m[2];\n    }\n}\n// ----\n// from_memory() -> 0x20, 0x60, 0xa0, 0x15, 3, 0x666F6F0000000000000000000000000000000000000000000000000000000000, 2, 13, 14\n// gas irOptimized: 122720\n// gas legacy: 130131\n// gas legacyOptimized: 128648\n// from_state() -> 0x20, 0x60, 0xa0, 21, 3, 0x666F6F0000000000000000000000000000000000000000000000000000000000, 2, 13, 14\n// gas irOptimized: 121424\n// gas legacy: 123190\n// gas legacyOptimized: 121758\n// from_calldata((bytes,uint16[],uint16)): 0x20, 0x60, 0xa0, 21, 3, 0x666F6F0000000000000000000000000000000000000000000000000000000000, 2, 13, 14 -> 0x20, 0x60, 0xa0, 0x15, 3, 0x666F6F0000000000000000000000000000000000000000000000000000000000, 2, 13, 14\n// gas irOptimized: 114852\n// gas legacy: 122423\n// gas legacyOptimized: 120698\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}