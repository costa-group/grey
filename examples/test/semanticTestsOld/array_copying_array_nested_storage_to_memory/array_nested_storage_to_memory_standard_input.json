{"language": "Solidity", "sources": {"array_nested_storage_to_memory.sol": {"content": "pragma abicoder v2;\n\ncontract C {\n    uint256[][] a1;\n    uint256[][2] a2;\n    uint256[2][] a3;\n    uint256[2][2] a4;\n\n    constructor() {\n        a1 = new uint256[][](2);\n        a1[0] = [1, 2];\n        a1[1] = [3, 4, 5];\n\n        a2[0] = [6, 7, 8];\n        a2[1] = [9];\n\n        a3.push([1, 2]);\n        a3.push([3, 4]);\n        a3.push([5, 6]);\n\n        a4 = [[10, 11], [12, 13]];\n    }\n\n    function test1() external returns (uint256[][] memory) {\n        return a1;\n    }\n\n    function test2() external returns (uint256[][2] memory) {\n        return a2;\n    }\n\n    function test3() external returns (uint256[2][] memory) {\n        return a3;\n    }\n\n    function test4() external returns (uint256[2][2] memory) {\n        return a4;\n    }\n}\n// ----\n// test1() -> 0x20, 2, 0x40, 0xa0, 2, 1, 2, 3, 3, 4, 5\n// test2() -> 0x20, 0x40, 0xc0, 3, 6, 7, 8, 1, 9\n// test3() -> 0x20, 3, 1, 2, 3, 4, 5, 6\n// test4() -> 10, 11, 12, 13\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}