{"language": "Solidity", "sources": {"parameter.sol": {"content": "pragma abicoder v2;\n\ntype MyAddress is address;\ncontract C {\n    function id(MyAddress a) external returns (MyAddress b) {\n        b = a;\n    }\n\n    function unwrap_assembly(MyAddress a) external returns (address b) {\n        assembly { b := a }\n    }\n\n    function wrap_assembly(address a) external returns (MyAddress b) {\n        assembly { b := a }\n    }\n\n    function unwrap(MyAddress a) external returns (address b) {\n        b = MyAddress.unwrap(a);\n    }\n    function wrap(address a) external returns (MyAddress b) {\n        b = MyAddress.wrap(a);\n    }\n\n}\n// ----\n// id(address): 5 -> 5\n// id(address): 0xffffffffffffffffffffffffffffffffffffffff -> 0xffffffffffffffffffffffffffffffffffffffff\n// id(address): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff -> FAILURE\n// unwrap(address): 5 -> 5\n// unwrap(address): 0xffffffffffffffffffffffffffffffffffffffff -> 0xffffffffffffffffffffffffffffffffffffffff\n// unwrap(address): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff -> FAILURE\n// wrap(address): 5 -> 5\n// wrap(address): 0xffffffffffffffffffffffffffffffffffffffff -> 0xffffffffffffffffffffffffffffffffffffffff\n// wrap(address): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff -> FAILURE\n// unwrap_assembly(address): 5 -> 5\n// unwrap_assembly(address): 0xffffffffffffffffffffffffffffffffffffffff -> 0xffffffffffffffffffffffffffffffffffffffff\n// unwrap_assembly(address): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff -> FAILURE\n// wrap_assembly(address): 5 -> 5\n// wrap_assembly(address): 0xffffffffffffffffffffffffffffffffffffffff -> 0xffffffffffffffffffffffffffffffffffffffff\n// wrap_assembly(address): 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff -> FAILURE\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}