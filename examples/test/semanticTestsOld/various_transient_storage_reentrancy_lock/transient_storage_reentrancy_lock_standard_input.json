{"language": "Solidity", "sources": {"transient_storage_reentrancy_lock.sol": {"content": "contract C {\n    bool transient locked;\n    modifier nonReentrant {\n        require(!locked, \"Reentrancy attempt\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    function test(address newAddress, bool reentrancy) nonReentrant public {\n        if (reentrancy)\n            reentrantCall(newAddress);\n    }\n\n    function reentrantCall(address a) public {\n        this.test(a, false);\n    }\n}\n// ====\n// EVMVersion: >=cancun\n// ----\n// test(address,bool): 0x1234abcd, true -> FAILURE, hex\"08c379a0\", 0x20, 0x12, \"Reentrancy attempt\"\n// test(address,bool): 0x1234abcd, false ->\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}