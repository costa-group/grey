{"language": "Solidity", "sources": {"conversion.sol": {"content": "pragma abicoder v2;\n\ntype MyUInt8 is uint8;\ntype MyInt8 is int8;\ntype MyUInt16 is uint16;\n\ncontract C {\n    function f(uint a) external returns(MyUInt8) {\n        return MyUInt8.wrap(uint8(a));\n    }\n    function g(uint a) external returns(MyInt8) {\n        return MyInt8.wrap(int8(int(a)));\n    }\n    function h(MyUInt8 a) external returns (MyInt8) {\n        return MyInt8.wrap(int8(MyUInt8.unwrap(a)));\n    }\n    function i(MyUInt8 a) external returns(MyUInt16) {\n        return MyUInt16.wrap(MyUInt8.unwrap(a));\n    }\n    function j(MyUInt8 a) external returns (uint) {\n        return MyUInt8.unwrap(a);\n    }\n    function k(MyUInt8 a) external returns (MyUInt16) {\n        return MyUInt16.wrap(MyUInt8.unwrap(a));\n    }\n    function m(MyUInt16 a) external returns (MyUInt8) {\n        return MyUInt8.wrap(uint8(MyUInt16.unwrap(a)));\n    }\n}\n// ----\n// f(uint256): 1 -> 1\n// f(uint256): 2 -> 2\n// f(uint256): 257 -> 1\n// g(uint256): 1 -> 1\n// g(uint256): 2 -> 2\n// g(uint256): 255 -> -1\n// g(uint256): 257 -> 1\n// h(uint8): 1 -> 1\n// h(uint8): 2 -> 2\n// h(uint8): 255 -> -1\n// h(uint8): 257 -> FAILURE\n// i(uint8): 250 -> 250\n// j(uint8): 1 -> 1\n// j(uint8): 2 -> 2\n// j(uint8): 255 -> 0xff\n// j(uint8): 257 -> FAILURE\n// k(uint8): 1 -> 1\n// k(uint8): 2 -> 2\n// k(uint8): 255 -> 0xff\n// k(uint8): 257 -> FAILURE\n// m(uint16): 1 -> 1\n// m(uint16): 2 -> 2\n// m(uint16): 255 -> 0xff\n// m(uint16): 257 -> 1\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}