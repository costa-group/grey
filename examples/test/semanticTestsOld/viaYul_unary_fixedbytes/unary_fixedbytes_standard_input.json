{"language": "Solidity", "sources": {"unary_fixedbytes.sol": {"content": "contract C {\n\tfunction conv(bytes25 a) public pure returns (bytes32) {\n\t\t// truncating and widening\n\t\treturn ~bytes32(bytes16(~a));\n\t}\n\n\tfunction upcast(bytes25 a) public pure returns (bytes32) {\n\t\t// implicit widening is allowed\n\t\treturn ~a;\n\t}\n\n\tfunction downcast(bytes25 a) public pure returns (bytes12) {\n\t\t// truncating cast must be explicit\n\t\treturn bytes12(~a);\n\t}\n\n\tfunction r_b32() public pure returns (bytes32) {\n\t\treturn ~bytes32(hex\"ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00\");\n\t}\n\tfunction r_b25() public pure returns (bytes25) {\n\t\treturn ~bytes25(hex\"ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff\");\n\t}\n\tfunction r_b16() public pure returns (bytes16) {\n\t\treturn ~bytes16(hex\"ff00ff00ff00ff00ff00ff00ff00ff00\");\n\t}\n\tfunction r_b8() public pure returns (bytes8) {\n\t\treturn ~bytes8(hex\"ff00ff00ff00ff00\");\n\t}\n\tfunction r_b4() public pure returns (bytes4) {\n\t\treturn ~bytes4(hex\"ff00ff00\");\n\t}\n\tfunction r_b1() public pure returns (bytes1) {\n\t\treturn ~bytes1(hex\"55\");\n\t}\n\n\tfunction a_b32() public pure returns (bytes32) {\n\t\tbytes32 r = ~bytes32(hex\"ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00\");\n\t\treturn r;\n\t}\n\tfunction a_b25() public pure returns (bytes25) {\n\t\tbytes25 r = ~bytes25(hex\"ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff\");\n\t\treturn r;\n\t}\n\tfunction a_b16() public pure returns (bytes16) {\n\t\tbytes16 r =  ~bytes16(hex\"ff00ff00ff00ff00ff00ff00ff00ff00\");\n\t\treturn r;\n\t}\n\tfunction a_b8() public pure returns (bytes8) {\n\t\tbytes8 r =  ~bytes8(hex\"ff00ff00ff00ff00\");\n\t\treturn r;\n\t}\n\tfunction a_b4() public pure returns (bytes4) {\n\t\tbytes4 r =  ~bytes4(hex\"ff00ff00\");\n\t\treturn r;\n\t}\n\tfunction a_b1() public pure returns (bytes1) {\n\t\tbytes1 r =  ~bytes1(hex\"55\");\n\t\treturn r;\n\t}\n}\n// ----\n// conv(bytes25): left(0xff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff) -> 0xff00ff00ff00ff00ff00ff00ff00ff00ffffffffffffffffffffffffffffffff\n// upcast(bytes25): left(0xff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff) -> 0xff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff0000000000000000\n// downcast(bytes25): left(0xff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff) -> 0xff00ff00ff00ff00ff00ff0000000000000000000000000000000000000000\n// r_b32() -> 0xff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff\n// r_b25() -> 0xff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff0000000000000000\n// r_b16() -> 0xff00ff00ff00ff00ff00ff00ff00ff00000000000000000000000000000000\n// r_b8() -> 0xff00ff00ff00ff000000000000000000000000000000000000000000000000\n// r_b4() -> 0xff00ff00000000000000000000000000000000000000000000000000000000\n// r_b1() -> 0xaa00000000000000000000000000000000000000000000000000000000000000\n// a_b32() -> 0xff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff\n// a_b25() -> 0xff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff0000000000000000\n// a_b16() -> 0xff00ff00ff00ff00ff00ff00ff00ff00000000000000000000000000000000\n// a_b8() -> 0xff00ff00ff00ff000000000000000000000000000000000000000000000000\n// a_b4() -> 0xff00ff00000000000000000000000000000000000000000000000000000000\n// a_b1() -> 0xaa00000000000000000000000000000000000000000000000000000000000000\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}