{"language": "Solidity", "sources": {"dirty_memory_uint32.sol": {"content": "contract C {\n    function f() public pure returns (bool correct) {\n        uint256[1] memory m;\n        assembly {\n            mstore(m, 0xdeadbeef15dead)\n        }\n        uint32 x = uint32(m[0]);\n        uint r;\n        assembly {\n            r := x\n        }\n        correct = (r == 0xef15dead) && (m[0] == 0xdeadbeef15dead);\n    }\n}\n// ====\n// compileViaYul: true\n// ----\n// f() -> true\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}