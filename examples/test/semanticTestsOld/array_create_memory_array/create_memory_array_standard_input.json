{"language": "Solidity", "sources": {"create_memory_array.sol": {"content": "contract C {\n    struct S {\n        uint256[2] a;\n        bytes b;\n    }\n\n    function f() public returns (bytes1, uint256, uint256, bytes1) {\n        bytes memory x = new bytes(200);\n        x[199] = \"A\";\n        uint256[2][] memory y = new uint256[2][](300);\n        y[203][1] = 8;\n        S[] memory z = new S[](180);\n        z[170].a[1] = 4;\n        z[170].b = new bytes(102);\n        z[170].b[99] = \"B\";\n        return (x[199], y[203][1], z[170].a[1], z[170].b[99]);\n    }\n}\n// ----\n// f() -> \"A\", 8, 4, \"B\"\n// gas irOptimized: 136664\n// gas legacy: 121380\n// gas legacyOptimized: 115488\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}