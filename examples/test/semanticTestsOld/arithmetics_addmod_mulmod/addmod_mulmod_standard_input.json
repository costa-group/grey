{"language": "Solidity", "sources": {"addmod_mulmod.sol": {"content": "contract C {\n    function test() public returns (uint256) {\n        // Note that this only works because computation on literals is done using\n        // unbounded integers.\n        if ((2**255 + 2**255) % 7 != addmod(2**255, 2**255, 7)) return 1;\n        if ((2**255 + 2**255) % 7 != addmod(2**255, 2**255, 7)) return 2;\n        return 0;\n    }\n}\n// ----\n// test() -> 0\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}