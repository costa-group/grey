{"language": "Solidity", "sources": {"abi_encode.sol": {"content": "contract C {\n    function f0() public returns (bytes memory) {\n        return abi.encode();\n    }\n\n    function f1() public returns (bytes memory) {\n        return abi.encode(1, 2);\n    }\n\n    function f2() public returns (bytes memory) {\n        string memory x = \"abc\";\n        return abi.encode(1, x, 2);\n    }\n\n    function f3() public returns (bytes memory r) {\n        // test that memory is properly allocated\n        string memory x = \"abc\";\n        r = abi.encode(1, x, 2);\n        bytes memory y = \"def\";\n        require(y[0] == \"d\");\n        y[0] = \"e\";\n        require(y[0] == \"e\");\n    }\n\n    function f4() public returns (bytes memory) {\n        bytes4 x = \"abcd\";\n        return abi.encode(bytes2(x));\n    }\n}\n// ----\n// f0() -> 0x20, 0x0\n// f1() -> 0x20, 0x40, 0x1, 0x2\n// f2() -> 0x20, 0xa0, 0x1, 0x60, 0x2, 0x3, \"abc\"\n// f3() -> 0x20, 0xa0, 0x1, 0x60, 0x2, 0x3, \"abc\"\n// f4() -> 0x20, 0x20, \"ab\"\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}