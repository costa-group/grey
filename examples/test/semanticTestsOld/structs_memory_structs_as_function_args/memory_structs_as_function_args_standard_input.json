{"language": "Solidity", "sources": {"memory_structs_as_function_args.sol": {"content": "contract Test {\n    struct S {\n        uint8 x;\n        uint16 y;\n        uint256 z;\n    }\n\n    function test() public returns (uint256 x, uint256 y, uint256 z) {\n        S memory data = combine(1, 2, 3);\n        x = extract(data, 0);\n        y = extract(data, 1);\n        z = extract(data, 2);\n    }\n\n    function extract(S memory s, uint256 which) internal returns (uint256 x) {\n        if (which == 0) return s.x;\n        else if (which == 1) return s.y;\n        else return s.z;\n    }\n\n    function combine(uint8 x, uint16 y, uint256 z)\n        internal\n        returns (S memory s)\n    {\n        s.x = x;\n        s.y = y;\n        s.z = z;\n    }\n}\n// ----\n// test() -> 1, 2, 3\n"}}, "settings": {"optimizer": {"enabled": true, "runs": 200, "details": {"peephole": false, "inliner": false, "jumpdestRemover": false, "orderLiterals": false, "deduplicate": false, "cse": false, "constantOptimizer": false}}, "outputSelection": {"*": {"*": ["abi", "metadata", "evm.bytecode", "evm.deployedBytecode", "evm.methodIdentifiers"]}}, "metadata": {"appendCBOR": false}}}