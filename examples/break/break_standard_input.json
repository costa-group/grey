{
    "language": "Yul",
    "sources": {
        "break.yul": {
            "content": "{\n    sstore(0x01, 0x0101)\n    for { sstore(0x02, 0x0202) } sload(0x03) { sstore(0x04, 0x0404) } {\n        sstore(0x05, 0x0505)\n        if sload(0x06) { sstore(0x07,0x0707) break }\n        sstore(0x08, 0x0808)\n        if sload(0x09) { sstore(0x0A,0x0A0A) continue }\n        sstore(0x0B, 0x0B0B)\n    }\n    sstore(0x0C, 0x0C0C)\n}\n// ----\n// digraph CFG {\n// nodesep=0.7;\n// node[shape=box];\n//\n// Entry [label=\"Entry\"];\n// Entry -> Block0;\n// Block0 [label=\"\\\n// sstore: [ 0x0101 0x01 ] => [ ]\\l\\\n// sstore: [ 0x0202 0x02 ] => [ ]\\l\\\n// \"];\n// Block0 -> Block0Exit [arrowhead=none];\n// Block0Exit [label=\"Jump\" shape=oval];\n// Block0Exit -> Block1;\n//\n// Block1 [label=\"\\\n// sload: [ 0x03 ] => [ TMP[sload, 0] ]\\l\\\n// \"];\n// Block1 -> Block1Exit;\n// Block1Exit [label=\"{ TMP[sload, 0]| { <0> Zero | <1> NonZero }}\" shape=Mrecord];\n// Block1Exit:0 -> Block2;\n// Block1Exit:1 -> Block3;\n//\n// Block2 [label=\"\\\n// sstore: [ 0x0c0c 0x0c ] => [ ]\\l\\\n// \"];\n// Block2Exit [label=\"MainExit\"];\n// Block2 -> Block2Exit;\n//\n// Block3 [label=\"\\\n// sstore: [ 0x0505 0x05 ] => [ ]\\l\\\n// sload: [ 0x06 ] => [ TMP[sload, 0] ]\\l\\\n// \"];\n// Block3 -> Block3Exit;\n// Block3Exit [label=\"{ TMP[sload, 0]| { <0> Zero | <1> NonZero }}\" shape=Mrecord];\n// Block3Exit:0 -> Block4;\n// Block3Exit:1 -> Block5;\n//\n// Block4 [label=\"\\\n// sstore: [ 0x0808 0x08 ] => [ ]\\l\\\n// sload: [ 0x09 ] => [ TMP[sload, 0] ]\\l\\\n// \"];\n// Block4 -> Block4Exit;\n// Block4Exit [label=\"{ TMP[sload, 0]| { <0> Zero | <1> NonZero }}\" shape=Mrecord];\n// Block4Exit:0 -> Block6;\n// Block4Exit:1 -> Block7;\n//\n// Block5 [label=\"\\\n// sstore: [ 0x0707 0x07 ] => [ ]\\l\\\n// \"];\n// Block5 -> Block5Exit [arrowhead=none];\n// Block5Exit [label=\"Jump\" shape=oval];\n// Block5Exit -> Block2;\n//\n// Block6 [label=\"\\\n// sstore: [ 0x0b0b 0x0b ] => [ ]\\l\\\n// \"];\n// Block6 -> Block6Exit [arrowhead=none];\n// Block6Exit [label=\"Jump\" shape=oval];\n// Block6Exit -> Block8;\n//\n// Block7 [label=\"\\\n// sstore: [ 0x0a0a 0x0a ] => [ ]\\l\\\n// \"];\n// Block7 -> Block7Exit [arrowhead=none];\n// Block7Exit [label=\"Jump\" shape=oval];\n// Block7Exit -> Block8;\n//\n// Block8 [label=\"\\\n// sstore: [ 0x0404 0x04 ] => [ ]\\l\\\n// \"];\n// Block8 -> Block8Exit [arrowhead=none];\n// Block8Exit [label=\"BackwardsJump\" shape=oval];\n// Block8Exit -> Block1;\n//\n// }\n"
        }
    },
    "settings": {
        "optimizer": {
            "enabled": true,
            "runs": 200,
            "details": {
                "peephole": false,
                "inliner": false,
                "jumpdestRemover": false,
                "orderLiterals": false,
                "deduplicate": false,
                "cse": false,
                "constantOptimizer": false
            }
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "metadata",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ]
            }
        }
    }
}